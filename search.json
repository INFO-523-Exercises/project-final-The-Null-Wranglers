[
  {
    "objectID": "Time_Series_Analysis.html",
    "href": "Time_Series_Analysis.html",
    "title": "Time Series Analysis",
    "section": "",
    "text": "suppressWarnings(library(tidyverse))\nlibrary(knitr)\nlibrary(lubridate)\nlibrary(ggplot2)\nlibrary(dplyr)"
  },
  {
    "objectID": "Time_Series_Analysis.html#dataset-setup",
    "href": "Time_Series_Analysis.html#dataset-setup",
    "title": "Time Series Analysis",
    "section": "Dataset Setup",
    "text": "Dataset Setup\n\n\nLoad data\n# read in data\nstudy_data &lt;- read.csv(\"data/study_data.csv\")\nkable(head(study_data))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nX\nCourse.Identifier\nCollege\nDepartment\nMerged\nSubject.Code\nCatalog.Number\nCourse.Description\nCourse.Level\nTotal.Student.Count\nD_GRADE_COUNT\nFAIL_GRADE_COUNT\nWITHDRAW_GRADE_COUNT\nDEW_COUNT\nPASS_GRADE_COUNT\nWITHDRAW_FULLMED_GRADE_COUNT\nINCOMPLETE_UNGRADED_COUNT\nTERM_LD\nACAD_YR_SID\nPercent.D.Grade\nPercent.E.Grade\nPercent.W.Grade\nPercent.DEW\nPercent.Passed\nPer.Full..Medical.Withdrawal\nPer.Ungraded..Incomplete\nP.F.Opt\nUnits\nMode\nClass..\nSections\nTotal.Enroll\nMax.Enroll\nRm.Cap\nEarly_Morning\nMid_Morning\nEarly_Afternoon\nMid_Afternoon\nEvening\nAsynchronous\nMonday\nTuesday\nWednesday\nThursday\nFriday\nSaturday\nSunday\nLaboratory\nLecture\nColloquim\nSeminar\nWorkshop\nDiscussion\nStudio\nPracticum\nIn_Person\nFull_Online\nIntractTV\nHybrid\nLive_Online\nReg_Session\nFirst_Half_Session\nSecond_Half_Session\nFirst_Third_Session\nSecond_Third_Session\nThird_Third_Session\nTen_Week\nThirteen_Week\nOther\nCollege_Number\n\n\n\n\n1\nFall 2019_ACBS_102L\nCollege of Agric and Life Sci\nAnimal&Biomedical Sciences-Ins\nACBS_102L\nACBS\n102L\nIntro to Animal Sci Lab\nLower Division\n250\n8\n7\n3\n18\n229\n3\n0\nFall 2019\n2020\n3.2\n2.8\n1.2\n7.2\n91.6\n1.2\n0\n\n1\nIn Person\n450809\n8\n250\n280\n8\n0\n0\n8\n0\n0\n0\n0\n4\n0\n4\n0\n0\n0\n8\n0\n0\n0\n0\n0\n0\n0\n8\n0\n0\n0\n0\n8\n0\n0\n0\n0\n0\n0\n0\n0\n1\n\n\n2\nFall 2019_ACBS_102R\nCollege of Agric and Life Sci\nAnimal&Biomedical Sciences-Ins\nACBS_102R\nACBS\n102R\nIntrod to Animal Science\nLower Division\n267\n7\n10\n2\n19\n244\n4\n0\nFall 2019\n2020\n2.6\n3.7\n0.7\n7.1\n91.4\n1.5\n0\n\n3\nIn Person\n41166\n1\n267\n299\n300\n1\n0\n0\n0\n0\n0\n0\n1\n0\n1\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n1\n\n\n3\nFall 2019_ACBS_142\nCollege of Agric and Life Sci\nAnimal&Biomedical Sciences-Ins\nACBS_142\nACBS\n142\nIntro Anml Racing Indus\nLower Division\n28\n0\n2\n0\n2\n26\n0\n0\nFall 2019\n2020\n0.0\n7.1\n0.0\n7.1\n92.9\n0.0\n0\n\n2\nIn Person\n25697\n1\n28\n20\n80\n1\n0\n0\n0\n0\n0\n1\n0\n1\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n1\n\n\n4\nFall 2019_ACBS_160D1\nCollege of Agric and Life Sci\nAnimal&Biomedical Sciences-Ins\nACBS_160D1\nACBS\n160D1\nHum+Anml Interl Dom-Pres\nLower Division\n681\n30\n72\n8\n110\n561\n10\n0\nFall 2019\n2020\n4.4\n10.6\n1.2\n16.2\n82.4\n1.5\n0\n\n3\nIn Person\n95423\n2\n481\n707\n912\n1\n1\n0\n0\n0\n0\n2\n0\n2\n0\n2\n0\n0\n0\n2\n0\n0\n0\n0\n0\n0\n2\n0\n0\n0\n0\n2\n0\n0\n0\n0\n0\n0\n0\n0\n1\n\n\n5\nFall 2019_ACBS_160D1\nCollege of Agric and Life Sci\nAnimal&Biomedical Sciences-Ins\nACBS_160D1\nACBS\n160D1\nHum+Anml Interl Dom-Pres\nLower Division\n681\n30\n72\n8\n110\n561\n10\n0\nFall 2019\n2020\n4.4\n10.6\n1.2\n16.2\n82.4\n1.5\n0\n\n3\nFullOnline\n67075\n1\n200\n200\n1\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n1\n\n\n6\nFall 2019_ACBS_195F\nCollege of Agric and Life Sci\nAnimal&Biomedical Sciences-Ins\nACBS_195F\nACBS\n195F\nCareers/Veterinary Sci\nLower Division\n205\n11\n17\n1\n29\n173\n3\n0\nFall 2019\n2020\n5.4\n8.3\n0.5\n14.1\n84.4\n1.5\n0\n\n1\nIn Person\n38050\n1\n205\n190\n300\n0\n1\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n1\n\n\n\n\n\n\n\nfilter data\n# Filter the data for the specified colleges and TERM_LD values\nselected_colleges &lt;- c('College of Agric and Life Sci', 'College of Humanities','College of Science', 'College of Social & Behav Sci', 'Eller College of Management')\n\n\nselected_terms &lt;- c('Fall 2018', 'Spring 2019', 'Fall 2019', 'Spring 2020', 'Fall 2020', 'Spring 2021')\n\nfiltered_data &lt;- study_data %&gt;%\n  filter(College %in% selected_colleges & TERM_LD %in% selected_terms)\n\n\n\n#DEW count (K) for 5 colleges over semesters - Utkarsha\n\n# Aggregate the data\n\naggregated_data &lt;- filtered_data %&gt;%\n\n  group_by(College, TERM_LD) %&gt;%\n\n  summarise(DEW_COUNT = sum(DEW_COUNT))\n\n`summarise()` has grouped output by 'College'. You can override using the\n`.groups` argument.\n\n# Convert TERM_LD to a factor with a specific order\n\nfiltered_data$TERM_LD &lt;- factor(filtered_data$TERM_LD, levels = selected_terms)\n\n \n\n# Save the plot to a folder named \"images\"\nplot &lt;- ggplot(aggregated_data, aes(x = factor(TERM_LD, levels = selected_terms), y = DEW_COUNT, color = College, group = College)) +\n  geom_line() +\n  geom_point() +\n  labs(\n    title = \"\",\n    x = \"Term\",\n    y = \"Total DEW Count\"\n  ) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, size=15), axis.text.y = element_text(size=15))\n  \n\n# Save the plot as a PNG file\nggsave(\"images/TSA1.png\", plot = plot)\n\nSaving 7 x 5 in image\n\nplot\n\n\n\n\n\n#DEW counts (H, I, J) for 5 colleges (Facet) over semesters  - Dong\n\n# Aggregate the data by College, TERM_LD, and calculate the sum of D_GRADE_COUNT, FAIL_GRADE_COUNT, and WITHDRAW_GRADE_COUNT\naggregated_data &lt;- filtered_data %&gt;%\n  group_by(College, TERM_LD) %&gt;%\n  summarise(D_GRADE_COUNT = sum(D_GRADE_COUNT),\n            FAIL_GRADE_COUNT = sum(FAIL_GRADE_COUNT),\n            WITHDRAW_GRADE_COUNT = sum(WITHDRAW_GRADE_COUNT))\n\n`summarise()` has grouped output by 'College'. You can override using the\n`.groups` argument.\n\n# Convert TERM_LD to a factor with a specific order\naggregated_data$TERM_LD &lt;- factor(aggregated_data$TERM_LD, levels = selected_terms)\n\n# Create a facet plot with lines for time series analysis\nplot2&lt;-ggplot(aggregated_data, aes(x = TERM_LD, group = College)) +\n  geom_line(aes(y = D_GRADE_COUNT, color = \"D_GRADE_COUNT\"), size = 1) +\n  geom_line(aes(y = FAIL_GRADE_COUNT, color = \"FAIL_GRADE_COUNT\"), size = 1) +\n  geom_line(aes(y = WITHDRAW_GRADE_COUNT, color = \"WITHDRAW_GRADE_COUNT\"), size = 1) +\n  geom_point(aes(y = D_GRADE_COUNT, color = \"D_GRADE_COUNT\"), size = 2) +\n  geom_point(aes(y = FAIL_GRADE_COUNT, color = \"FAIL_GRADE_COUNT\"), size = 2) +\n  geom_point(aes(y = WITHDRAW_GRADE_COUNT, color = \"WITHDRAW_GRADE_COUNT\"), size = 2) +\n  labs(title = \"\",\n       x = \"Term\",\n       y = \"Total Count\",\n       color = \"Category\") +\n  scale_color_manual(values = c(\"D_GRADE_COUNT\" = \"blue\", \"FAIL_GRADE_COUNT\" = \"red\", \"WITHDRAW_GRADE_COUNT\" = \"green\")) +\n  facet_wrap(~College) +\n  theme_minimal()+\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, size=15), axis.text.y = element_text(size=15),\n        strip.text = element_text(size = 15, angle = 0, hjust = 0.5),\n        legend.position = \"bottom\",  # Place legend at the bottom\n        legend.direction = \"horizontal\",  # Display legend horizontally\n        legend.box = \"horizontal\")  # Align legend items horizontally\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n# Save the plot as a PNG file\nggsave(\"images/TSA2.png\", plot = plot2, width = 12, height = 8, units = \"in\")\n\n\n#DEW counts (F) based on the division level over semesters - Anjani\n\n# Rename the 'course.level' column to 'Course_Level'\nfiltered_data &lt;- filtered_data %&gt;%\n  rename(Course_Level =     Course.Level)\n\ngrouped_data &lt;- filtered_data %&gt;%\n  group_by(College, TERM_LD, Course_Level)\n\n# Convert TERM_LD to factor with ordered levels\ngrouped_data$TERM_LD &lt;- factor(\n  grouped_data$TERM_LD,\n  levels = selected_terms,\n  ordered = TRUE\n)\n\n\n# Summarize the grouped data to get the desired summary statistics\nsummary &lt;- grouped_data %&gt;%\n  summarise(\n    count = n()\n  )\n\n`summarise()` has grouped output by 'College', 'TERM_LD'. You can override\nusing the `.groups` argument.\n\n# Plotting the facet line graph with adjusted strip text labels and legend at the bottom\nplot3 &lt;- ggplot(summary, aes(x = TERM_LD, y = count, group = Course_Level, color = Course_Level)) +\n  geom_line() +\n  geom_point() +\n  facet_wrap(~College) +\n  labs(\n    title = \"\",\n    x = \"Term\",\n    y = \"Count\"\n  ) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1,  size=15), axis.text.y = element_text(size=15),\n        strip.text = element_text(size = 15, angle = 0, hjust = 0.5),\n        legend.position = \"bottom\",  # Place legend at the bottom\n        legend.direction = \"horizontal\",  # Display legend horizontally\n        legend.box = \"horizontal\")  # Align legend items horizontally\n\n# Save the plot as a PNG file\nggsave(\"images/TSA3.png\", plot = plot3, width = 12, height = 8, units = \"in\")\n\n\nstudy_data &lt;- read.csv(\"data/study_data.csv\")\n\n# Filter the data for the specified colleges and TERM_LD values\nstudy_data_selected_terms &lt;- c('Fall 2018', 'Spring 2019', 'Fall 2019', 'Spring 2020', 'Fall 2020', 'Spring 2021')\n\nstudy_data_filtered_data &lt;- study_data %&gt;%\n  filter(College %in% selected_colleges & TERM_LD %in% study_data_selected_terms)\n\n\n#How time affects classes (columns AH to AM) for different colleges (the five mentioned above)\n\n# Create the table for each time slot\ntime_slots &lt;- c(\"Early_Morning\", \"Mid_Morning\", \"Early_Afternoon\", \"Mid_Afternoon\", \"Evening\", \"Asynchronous\")\n\ntables_list &lt;- lapply(time_slots, function(slot) {\n  table_data &lt;- study_data_filtered_data%&gt;%\n    group_by(College, TERM_LD) %&gt;%\n    summarise(Total_Classes_Attended = sum(!!sym(slot), na.rm = TRUE))\n})\n\n`summarise()` has grouped output by 'College'. You can override using the\n`.groups` argument.\n`summarise()` has grouped output by 'College'. You can override using the\n`.groups` argument.\n`summarise()` has grouped output by 'College'. You can override using the\n`.groups` argument.\n`summarise()` has grouped output by 'College'. You can override using the\n`.groups` argument.\n`summarise()` has grouped output by 'College'. You can override using the\n`.groups` argument.\n`summarise()` has grouped output by 'College'. You can override using the\n`.groups` argument.\n\n# Modify column names of the tables within tables_list\nfor (i in 1:length(tables_list)) {\n  col_name &lt;- paste(\"Total \", time_slots[i], sep = \"\")  # Generate new column name\n  names(tables_list[[i]])[3] &lt;- col_name  # Assign new column name to the last column\n}\n\n# Merge tables into a single table\nmerged_table &lt;- reduce(tables_list, full_join, by = c(\"College\", \"TERM_LD\"))\n\n# Melt the data for plotting\nmerged_table_long &lt;- tidyr::pivot_longer(merged_table, cols = starts_with(\"Total\"), \n                                         names_to = \"Time_Slot\", values_to = \"Total_Classes_Attended\")\n\n# Convert TERM_LD to factor with ordered levels\nmerged_table_long$TERM_LD &lt;- factor(\n  merged_table_long$TERM_LD,\n  levels = study_data_selected_terms,\n  ordered = TRUE\n)\n\n# Plotting the facet plot with chronological x-axis\nplot4&lt;-ggplot(merged_table_long, aes(x = TERM_LD, y = Total_Classes_Attended, color = Time_Slot, group = Time_Slot)) +\n  geom_line() +\n  facet_wrap(~ College) +\n  labs(\n    title = \"\",\n    x = \"Term ID\",\n    y = \"Total Classes Attended\"\n  ) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1,  size=15), axis.text.y = element_text(size=15),\n        strip.text = element_text(size = 15, angle = 0, hjust = 0.5),\n        legend.position = \"bottom\",  # Place legend at the bottom\n        legend.direction = \"horizontal\",  # Display legend horizontally\n        legend.box = \"horizontal\") # Align legend items horizontally\n       \n\n# Save the plot as a PNG file\nggsave(\"images/TSA4.png\", plot = plot4, width = 10, height = 8, units = \"in\")\n\n\n#Total number of classes per week (AN to AT) - Anjani\n\n# Create a table for each day of the week\nweekdays &lt;- c(\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\")\n\ntables_list &lt;- lapply(weekdays, function(slot) {\n  table_data &lt;- study_data_filtered_data%&gt;%\n    group_by(College, TERM_LD) %&gt;%\n    summarise(Total_Classes_Attended = sum(!!sym(slot), na.rm = TRUE))\n})\n\n`summarise()` has grouped output by 'College'. You can override using the\n`.groups` argument.\n`summarise()` has grouped output by 'College'. You can override using the\n`.groups` argument.\n`summarise()` has grouped output by 'College'. You can override using the\n`.groups` argument.\n`summarise()` has grouped output by 'College'. You can override using the\n`.groups` argument.\n`summarise()` has grouped output by 'College'. You can override using the\n`.groups` argument.\n\n# Modify column names of the tables within tables_list\nfor (i in 1:length(tables_list)) {\n  col_name &lt;- paste(\"Total_\", weekdays[i], sep = \"\")  # Generate new column name\n  names(tables_list[[i]])[3] &lt;- col_name  # Assign new column name to the last column\n}\n\n# Merge tables into a single table\nmerged_table &lt;- reduce(tables_list, full_join, by = c(\"College\", \"TERM_LD\"))\n\n# Melt the data for plotting\nmerged_table_long &lt;- tidyr::pivot_longer(merged_table, cols = starts_with(\"Total\"),  names_to = \"Time_Slot\", values_to = \"Total_Classes_Attended\")\n\n# Convert TERM_LD to factor with ordered levels\nmerged_table_long$TERM_LD &lt;- factor(\n  merged_table_long$TERM_LD,\n  levels = study_data_selected_terms,\n  ordered = TRUE\n)\n\n# Convert Time_Slot to factor with ordered levels\nmerged_table_long$Time_Slot &lt;- factor(\n  merged_table_long$Time_Slot,\n  levels = paste(\"Total_\", weekdays, sep = \"\"),\n  ordered = TRUE\n)\n\n# Plotting the facet plot\nggplot(merged_table_long, aes(x = TERM_LD, y = Total_Classes_Attended, color = Time_Slot, group = Time_Slot)) +\n  geom_line() +\n  facet_wrap(~ College, scales = \"free\") +\n  labs(\n    title = \"Total Classes Attended in Different Days for Colleges\",\n    x = \"Term ID\",\n    y = \"Total Classes Attended\"\n  ) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n#Total Number of students enrolled in different types of teaching format (columns AU to BB) for different colleges - Dong\n\n#  Only look at five colleges: Agriculture, Social and Behavioral, Eller, Humanities, Science\nstudy_data&lt;- study_data%&gt;%\n  filter(College == \"College of Agric and Life Sci\" | College ==  \"Eller College of Management\"|  College == \"College of Social & Behav Sci\"| College == \"College of Science\"|  College ==  \"College of Humanities\")\n\n\n# total number of courses by colleges\nstudy_data%&gt;%\n  group_by(College) %&gt;%\n  ggplot(aes( x = College,\n            fill = College))+\n  geom_bar(position = \"dodge\")\n\n\n\n\n\n#3 Mean student enrollment in different types of teaching format (columns AU to BB) by colleges - Dong\n\n# Reshape data and calculate mean enrollment\nlong_data &lt;- study_data%&gt;%\n  pivot_longer(\n    cols = Laboratory:Practicum,\n    names_to = \"TeachingFormat\",\n    values_to = \"Enrollment\"\n  ) %&gt;%\n  group_by(College, TeachingFormat) %&gt;%\n  summarise(MeanEnrollment = mean(Enrollment, na.rm = TRUE))\n\n`summarise()` has grouped output by 'College'. You can override using the\n`.groups` argument.\n\n# Create a plot with facets for each college, adding colors for each TeachingFormat\nggplot(long_data, aes(x = TeachingFormat, y = MeanEnrollment, fill = TeachingFormat)) +\n  geom_bar(stat = \"identity\") +\n  facet_wrap(~ College) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, size=4)) +\n  scale_fill_brewer(palette = \"Set1\")"
  },
  {
    "objectID": "regression.html",
    "href": "regression.html",
    "title": "Regression",
    "section": "",
    "text": "Load Libraries\nif (!require(pacman))\n  install.packages(\"pacman\")\n\n\nLoading required package: pacman\n\n\nLoad Libraries\npacman::p_load(colorblindr,\n       dlookr,\n       formattable,\n       GGally,\n       ggdist,\n       ggpubr,\n       ggridges,\n       here,\n       tidyverse,\n       tidymodels,\n       ranger,\n       randomForest,\n       glmnet,\n       gridExtra,\n       caret,\n       knitr, \n       corrr, \n       formattable, \n       ggcorrplot)\n\n\nInstalling package into 'C:/Users/krist/AppData/Local/R/win-library/4.3'\n(as 'lib' is unspecified)\n\n\nWarning: package 'colorblindr' is not available for this version of R\n\nA version of this package for your version of R might be available elsewhere,\nsee the ideas at\nhttps://cran.r-project.org/doc/manuals/r-patched/R-admin.html#Installing-packages\n\n\nWarning: unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.3:\n  cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.3/PACKAGES'\n\n\nWarning: 'BiocManager' not available.  Could not check Bioconductor.\n\nPlease use `install.packages('BiocManager')` and then retry.\n\n\nWarning in p_install(package, character.only = TRUE, ...):\n\n\nWarning in library(package, lib.loc = lib.loc, character.only = TRUE,\nlogical.return = TRUE, : there is no package called 'colorblindr'\n\n\nWarning in pacman::p_load(colorblindr, dlookr, formattable, GGally, ggdist, : Failed to install/load:\ncolorblindr\n\n\nnarrow down to College of Soc & Behav Sciences\n\n\nRead in Data\n# read in data\nregression_data &lt;- read.csv(\"data/study_data.csv\")\n\n\n\n# filter to be just desired college\nregression_data &lt;- regression_data %&gt;% filter(College == \"College of Social & Behav Sci\")\n\n# remove character columns\nnumeric_regression_data &lt;- select_if(regression_data, is.numeric)\nnumeric_regression_data &lt;- numeric_regression_data %&gt;% select(-c(1:5))\nnumeric_regression_data &lt;- numeric_regression_data %&gt;% select(-c(2:8, 10:14))\n\n\n# normalized the data\nnormalized_regression_data &lt;- numeric_regression_data %&gt;% mutate(across(c(Early_Morning:Other), .fns=~./Sections*100))\n\n\n# create different df to look at different features\ngeneral_regression_data &lt;- numeric_regression_data %&gt;% select(c(1, 3:6))\ntime_regression_data &lt;- normalized_regression_data %&gt;% select(c(Percent.DEW, 7:12))\nday_regression_data &lt;- normalized_regression_data %&gt;% select(c(Percent.DEW, 13:17))\nmode_regression_data &lt;- normalized_regression_data %&gt;% select(Percent.DEW, In_Person, Full_Online, Hybrid, Live_Online)\nsession_regression_data &lt;- normalized_regression_data %&gt;% select(Percent.DEW, 33:35)\n\nFeature selection\nCorrelation Analysis\n\n# Create a table and format it\ngeneral_regression_data_table &lt;- correlate(general_regression_data) %&gt;% formattable()\n\nCorrelation computed with\n• Method: 'pearson'\n• Missing treated using: 'pairwise.complete.obs'\n\n# Plot correlations using ggcorrplot\npng_file &lt;- \"images/general_regression_data_table.png\"\npng(png_file, width = 10, height = 8, units = \"in\", res = 150)\n\n# Increase x-axis and y-axis text size\nggcorrplot(cor(general_regression_data), lab = TRUE, lab_size = 5) +\n  theme(axis.text.x = element_text(size = 25),  # Adjust size as needed\n        axis.text.y = element_text(size = 25))  # Adjust size as needed\n\ndev.off()\n\npng \n  2 \n\n# Display the plot\nplot_correlate(general_regression_data_table)\n\nWarning: 'plot_correlate' is deprecated.\nUse 'plot.correlate' instead.\nSee help(\"Deprecated\")\n\n\n\n\n\n\n# Correlation matrix of numerical variables\nday_regression_data_table &lt;- correlate(day_regression_data) %&gt;%\n  formattable()\n\nCorrelation computed with\n• Method: 'pearson'\n• Missing treated using: 'pairwise.complete.obs'\n\n# Plot correlations using ggcorrplot\npng_file &lt;- \"images/day_regression_data_table.png\"\npng(png_file, width = 10, height = 8, units = \"in\", res = 200)\n\n# Increase x-axis and y-axis text size\nggcorrplot(cor(day_regression_data), lab = TRUE, lab_size = 5) +\n  theme(axis.text.x = element_text(size = 20),  # Adjust size as needed\n        axis.text.y = element_text(size = 20))  # Adjust size as needed\n\ndev.off()\n\npng \n  2 \n\n# Display the plot\nplot_correlate(day_regression_data_table)\n\nWarning: 'plot_correlate' is deprecated.\nUse 'plot.correlate' instead.\nSee help(\"Deprecated\")\n\n\n\n\n\n\n# Create a table and format it\ntime_regression_data_table &lt;- correlate(time_regression_data) %&gt;%\n  formattable()\n\nCorrelation computed with\n• Method: 'pearson'\n• Missing treated using: 'pairwise.complete.obs'\n\n# Plot correlations using ggcorrplot\npng_file &lt;- \"images/time_regression_data_table.png\"\npng(png_file, width = 10, height = 8, units = \"in\", res = 200)\n\n# Increase x-axis and y-axis text size\nggcorrplot(cor(time_regression_data), lab = TRUE, lab_size = 5) +\n  theme(axis.text.x = element_text(size = 20),  # Adjust size as needed\n        axis.text.y = element_text(size = 20))  # Adjust size as needed\n\ndev.off()\n\npng \n  2 \n\n# Display the plot\nplot_correlate(time_regression_data_table)\n\nWarning: 'plot_correlate' is deprecated.\nUse 'plot.correlate' instead.\nSee help(\"Deprecated\")\n\n\n\n\n\n\n# Create a table and format it\nmode_regression_data_table &lt;- correlate(mode_regression_data) %&gt;%\n  formattable()\n\nCorrelation computed with\n• Method: 'pearson'\n• Missing treated using: 'pairwise.complete.obs'\n\n# Plot correlations using ggcorrplot\npng_file &lt;- \"images/mode_regression_data_table.png\"\npng(png_file, width = 10, height = 8, units = \"in\", res = 200)\n\n# Increase x-axis and y-axis text size\nggcorrplot(cor(mode_regression_data), lab = TRUE, lab_size = 5) +\n  theme(axis.text.x = element_text(size = 30),  # Adjust size as needed\n        axis.text.y = element_text(size = 30))  # Adjust size as needed\n\ndev.off()\n\npng \n  2 \n\n# Display the plot\nplot_correlate(mode_regression_data_table)\n\nWarning: 'plot_correlate' is deprecated.\nUse 'plot.correlate' instead.\nSee help(\"Deprecated\")\n\n\n\n\n\n\n# Correlation matrix of numerical variables\nsession_regression_data_table &lt;- correlate(session_regression_data) %&gt;%\n  formattable()\n\nCorrelation computed with\n• Method: 'pearson'\n• Missing treated using: 'pairwise.complete.obs'\n\n# Save the plot as a PNG file with increased x-axis and y-axis text size\npng_file &lt;- \"images/session_regression_data_table.png\"\npng(png_file, width = 10, height = 8, units = \"in\", res = 200)\n\n# Increase x-axis and y-axis text size in the saved plot\nggcorrplot(cor(session_regression_data), lab = TRUE, lab_size = 5) +\n  theme(axis.text.x = element_text(size = 20),  # Adjust size as needed\n        axis.text.y = element_text(size = 20))  # Adjust size as needed\n\ndev.off()\n\npng \n  2 \n\n# Display the saved plot\nplot_correlate(session_regression_data_table)\n\nWarning: 'plot_correlate' is deprecated.\nUse 'plot.correlate' instead.\nSee help(\"Deprecated\")\n\n\n\n\n\n\n# create a df with only the desired features\nmodel_data &lt;- normalized_regression_data %&gt;% select(c(DEW_COUNT,Total.Enroll, Percent.DEW, Full_Online, Second_Half_Session, First_Half_Session, Reg_Session))\n\nMulti\n\n# Perform multiple linear regression\nmodel &lt;- lm(Percent.DEW ~ Second_Half_Session + Full_Online, data = model_data)\n# Summary of the regression model\n# Summary of the regression model in a kable table\nsummary_table &lt;- data.frame(\n  Estimate = coef(model),\n  `Std. Error` = summary(model)$coefficients[, \"Std. Error\"],\n  `t value` = summary(model)$coefficients[, \"t value\"],\n  `Pr(&gt;|t|)` = summary(model)$coefficients[, \"Pr(&gt;|t|)\"]\n)\n\n# Print the kable table\nkable(summary_table, align = \"c\")\n\n\n\n\n\nEstimate\nStd..Error\nt.value\nPr...t..\n\n\n\n\n(Intercept)\n11.4786541\n0.2765963\n41.499665\n0\n\n\nSecond_Half_Session\n0.0408008\n0.0072483\n5.629016\n0\n\n\nFull_Online\n0.0339054\n0.0052942\n6.404287\n0\n\n\n\n\n\n\n\n\nset.seed(1)\n\n# X will be Second_Half_Session\nX &lt;- model_data$Second_Half_Session\n# y will be the percent dew\ny &lt;- model_data$Percent.DEW\n\ndata &lt;- tibble(X=X, y=y)\n\nsplit_obj &lt;- initial_split(data, prop=.8)\n\ntrain_data &lt;- training(split_obj)\ntest_data &lt;- testing(split_obj)\n\n# Extract X_train, X_test, y_train, y_test\nX_train &lt;- train_data$X\ny_train &lt;- train_data$y\n\nX_test &lt;- test_data$X\ny_test &lt;- test_data$y\n\n\n# Create a linear regression model specification\nlin_reg_spec &lt;- linear_reg() |&gt; \n  set_engine(\"lm\")\n\n# Fit the model to the training data\nlin_reg_fit &lt;- lin_reg_spec |&gt; \n  fit(y ~ X, data = train_data)\n\n\n# Apply model to the test set\ny_pred_test &lt;- predict(lin_reg_fit, new_data = test_data) |&gt;\n  pull(.pred)\n\n\n# Plotting true vs predicted values\nTrue_Predicted_table &lt;-ggplot() + \n  geom_point(aes(x = as.vector(y_test), y = y_pred_test), color = 'black') +\n  ggtitle('Comparing true and predicted values for test set') +\n  xlab('True values for y') +\n  ylab('Predicted values for y')\n\nggsave(\"images/True_Predicted_table.png\", plot=True_Predicted_table)\n\nSaving 7 x 5 in image\n\nplot(True_Predicted_table)\n\n\n\n\n\n# Prepare data for yardstick evaluation\neval_data &lt;- tibble(\n  truth = as.vector(y_test),\n  estimate = y_pred_test\n)\n\n# Model evaluation\nrmse_value &lt;- rmse(data = eval_data, truth = truth, estimate = estimate)\nr2_value &lt;- rsq(eval_data, truth = truth, estimate = estimate)\n\ncat(\"Root mean squared error =\", sprintf(\"%.4f\", rmse_value$.estimate), \"\\n\")\n\nRoot mean squared error = 10.5330 \n\n\n\ncat('R-squared =', sprintf(\"%.4f\", r2_value$.estimate), \"\\n\")\n\nR-squared = 0.0376 \n\n\n\n# Display model parameters\ncoef_values &lt;- coef(lin_reg_fit$fit)  # Extract coefficients\nslope &lt;- coef_values[\"X\"]\nintercept &lt;- coef_values[\"(Intercept)\"]\n\ncat(\"Slope =\", slope, \"\\n\")\n\nSlope = 0.06681651 \n\n\n\ncat(\"Intercept =\", intercept, \"\\n\")\n\nIntercept = 12.45205 \n\n\n\n### Step 4: Postprocessing\n# Plot outputs\nPredicted_Function &lt;- ggplot() +\n  geom_point(aes(x = as.vector(X_test), y = as.vector(y_test)), color = 'black') +\n  geom_line(aes(x = as.vector(X_test), y = y_pred_test), color = 'blue', linewidth = 1) +\n  ggtitle(sprintf('Predicted Function: y = %.2fX + %.2f', slope, intercept)) +\n  xlab('X') +\n  ylab('y') +\n  theme(axis.text.x = element_text(size = 20),  # Adjust size as needed\n        axis.text.y = element_text(size = 20), \n        plot.title = element_text(size = 25))  # Adjust size as needed\n\n# Save the plot as a PNG file\nggsave(\"images/Predicted_Function.png\", plot = Predicted_Function)\n\nSaving 7 x 5 in image\n\n# Display the plot\nplot(Predicted_Function)\n\n\n\n\nLasso\n\n# Extract the predictor variables and response variable\nX &lt;- model_data[, c(\"Full_Online\", \"Second_Half_Session\")]\ny &lt;- model_data$Percent.DEW\n# Standardize the predictor variables (optional but recommended for regularization)\nX &lt;- scale(X)\n# Set up the Lasso regression model\nlasso_model &lt;- cv.glmnet(X, y, alpha = 1)  # alpha = 1 for Lasso\n# Plot the cross-validated mean squared error (optional)\nplot(lasso_model)\n\n\n\n# Save the plot as a PNG file in the \"images\" folder\npng(\"images/lasso_model_plot.png\", width = 800, height = 600)\nplot(lasso_model)\ndev.off()\n\npng \n  2 \n\n# Identify the optimal lambda (penalty parameter)\nbest_lambda &lt;- lasso_model$lambda.min\ncat(\"Best Lambda:\", best_lambda, \"\\n\")\n\nBest Lambda: 0.0158644 \n\n# Refit the model with the optimal lambda\nfinal_model &lt;- glmnet(X, y, alpha = 1, lambda = best_lambda)\n# Display coefficients\ncoef(final_model)\n\n3 x 1 sparse Matrix of class \"dgCMatrix\"\n                           s0\n(Intercept)         13.417729\nFull_Online          1.635297\nSecond_Half_Session  1.435554\n\n\nThis show we can expect to see a 1.6% increase for full online and an additional 1.4 percent increase in second half.\n\nset.seed(123)  # for reproducibility\nindex &lt;- createDataPartition(model_data$Percent.DEW, p = 0.8, list = FALSE)\ntrain_data &lt;- model_data[index, ]\ntest_data &lt;- model_data[-index, ]\n1:49\n\n [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n[26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49\n\n# Train Lasso regression model on the training data\nlasso_model &lt;- cv.glmnet(\n  x = as.matrix(train_data[, c(\"Full_Online\", \"Second_Half_Session\")]),\n  y = train_data$Percent.DEW,\n  alpha = 1\n)\n# Identify the optimal lambda\nbest_lambda &lt;- lasso_model$lambda.min\n# Refit the model with the optimal lambda\nfinal_lasso_model &lt;- glmnet(\n  x = as.matrix(train_data[, c(\"Full_Online\",  \"Second_Half_Session\")]),\n  y = train_data$Percent.DEW,\n  alpha = 1,\n  lambda = best_lambda\n)\n1:50\n\n [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n[26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\n\n# Make predictions on the test data\npredictions &lt;- predict(final_lasso_model, newx = as.matrix(test_data[, c(\"Full_Online\",  \"Second_Half_Session\")]), s = best_lambda)\n# Evaluate the model's performance\nmse &lt;- mean((predictions - test_data$Percent.DEW)^2)\nprint(paste(\"Mean Squared Error on Test Data:\", mse))\n\n[1] \"Mean Squared Error on Test Data: 121.418883195951\"\n\n\nHigh mse indicates poor results in prediction\n\n# Extract the predictor variables and response variable\nX &lt;- model_data[, c(\"Full_Online\", \"Second_Half_Session\")]\ny &lt;- model_data$Percent.DEW\n\n# Standardize the predictor variables (optional but recommended for regularization)\nX &lt;- scale(X)\n\n# Set up a sequence of lambda values\nlambda_values &lt;- 10^seq(10, -2, length = 100)\n\n# Train Lasso regression model with cross-validation\nlasso_model &lt;- cv.glmnet(X, y, alpha = 1, lambda = lambda_values)\n\n# Save the plot as a PNG file in the \"images\" folder\npng(\"images/lasso_model_errors_plot.png\", width = 800, height = 600)\n# Plot training and testing errors\nplot(lasso_model$glmnet.fit, xvar = \"lambda\", label = TRUE, lwd = 2, col = c(\"blue\", \"red\"), main = \"Lasso Regression - Training and Testing Errors\")\nlegend(\"topright\", legend = c(\"Training\", \"Testing\"), col = c(\"blue\", \"red\"), lty = 1)\ndev.off()\n\npng \n  2 \n\n# Plot training and testing errors again\nplot(lasso_model$glmnet.fit, xvar = \"lambda\", label = TRUE, lwd = 2, col = c(\"blue\", \"red\"), main = \"Lasso Regression - Training and Testing Errors\")\nlegend(\"topright\", legend = c(\"Training\", \"Testing\"), col = c(\"blue\", \"red\"), lty = 1)\n\n\n\n\nRidge\n\n# Extract the predictor variables and response variable\nX &lt;- model_data[, c(\"Full_Online\", \"Second_Half_Session\")]\ny &lt;- model_data$Percent.DEW\n\n# Standardize the predictor variables (optional but recommended for regularization)\nX &lt;- scale(X)\n\n# Set up the Ridge regression model\nridge_model &lt;- cv.glmnet(X, y, alpha = 0)  # alpha = 0 for Ridge\n\n# Plot the cross-validated mean squared error (optional)\nplot(ridge_model)\n\n# Save the plot as a PNG file in the \"images\" folder\npng(\"images/ridge_model_plot.png\", width = 800, height = 600)\nplot(ridge_model)\n\n# Identify the optimal lambda (penalty parameter)\nbest_lambda &lt;- ridge_model$lambda.min\ncat(\"Best Lambda:\", best_lambda, \"\\n\")\n\nBest Lambda: 0.6709442 \n\n# Add a dotted line for the best lambda\nabline(v = log(best_lambda), col = \"red\", lty = 2)\n\ndev.off()\n\npng \n  2 \n\n# Identify the optimal lambda (penalty parameter)\nbest_lambda &lt;- ridge_model$lambda.min\ncat(\"Best Lambda:\", best_lambda, \"\\n\")\n\nBest Lambda: 0.6709442 \n\n# Add a dotted line for the best lambda\nabline(v = log(best_lambda), col = \"red\", lty = 2)\n\n\n\n# Refit the model with the optimal lambda\nfinal_model &lt;- glmnet(X, y, alpha = 0, lambda = best_lambda)\n\n# Display coefficients\ncoef(final_model)\n\n3 x 1 sparse Matrix of class \"dgCMatrix\"\n                           s0\n(Intercept)         13.417729\nFull_Online          1.576391\nSecond_Half_Session  1.399350\n\n\n\nset.seed(123)  # for reproducibility\nindex &lt;- createDataPartition(model_data$Percent.DEW, p = 0.8, list = FALSE)\ntrain_data &lt;- model_data[index, ]\ntest_data &lt;- model_data[-index, ]\n1:49\n\n [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n[26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49\n\n# Train Lasso regression model on the training data\nridge_model &lt;- cv.glmnet(\n  x = as.matrix(train_data[, c(\"Full_Online\", \"Second_Half_Session\")]),\n  y = train_data$Percent.DEW,\n  alpha = 0\n)\n# Identify the optimal lambda\nbest_lambda &lt;- ridge_model$lambda.min\n# Refit the model with the optimal lambda\nfinal_ridge_model &lt;- glmnet(\n  x = as.matrix(train_data[, c(\"Full_Online\",  \"Second_Half_Session\")]),\n  y = train_data$Percent.DEW,\n  alpha = 0,\n  lambda = best_lambda\n)\n1:50\n\n [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n[26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\n\n# Make predictions on the test data\npredictions &lt;- predict(final_ridge_model, newx = as.matrix(test_data[, c(\"Full_Online\",  \"Second_Half_Session\")]), s = best_lambda)\n# Evaluate the model's performance\nmse &lt;- mean((predictions - test_data$Percent.DEW)^2)\nprint(paste(\"Mean Squared Error on Test Data:\", mse))\n\n[1] \"Mean Squared Error on Test Data: 121.231091169763\"\n\n# Display coefficients\ncoef(final_ridge_model)\n\n3 x 1 sparse Matrix of class \"dgCMatrix\"\n                             s0\n(Intercept)         11.60353590\nFull_Online          0.02865789\nSecond_Half_Session  0.04648783\n\n\n\n# Extract the predictor variables and response variable\nX &lt;- model_data[, c(\"Full_Online\", \"Second_Half_Session\")]\ny &lt;- model_data$Percent.DEW\n\n# Standardize the predictor variables (optional but recommended for regularization)\nX &lt;- scale(X)\n\n# Set up a sequence of lambda values\nlambda_values &lt;- 10^seq(10, -2, length = 100)\n\n# Train Ridge regression model with cross-validation\nridge_model &lt;- cv.glmnet(X, y, alpha = 0, lambda = lambda_values)\n\n# Save the plot as a PNG file in the \"images\" folder\npng(\"images/ridge_model_errors_plot.png\", width = 800, height = 600)\n# Plot training and testing errors\nplot(ridge_model$glmnet.fit, xvar = \"lambda\", label = TRUE, lwd = 2, col = c(\"blue\", \"red\"), main = \"Ridge Regression - Training and Testing Errors\")\nlegend(\"topright\", legend = c(\"Training\", \"Testing\"), col = c(\"blue\", \"red\"), lty = 1)\ndev.off()\n\npng \n  2 \n\n# Plot training and testing errors again\nplot(ridge_model$glmnet.fit, xvar = \"lambda\", label = TRUE, lwd = 2, col = c(\"blue\", \"red\"), main = \"Ridge Regression - Training and Testing Errors\")\nlegend(\"topright\", legend = c(\"Training\", \"Testing\"), col = c(\"blue\", \"red\"), lty = 1)\n\n\n\n# Display coefficients\ncoef(final_model)\n\n3 x 1 sparse Matrix of class \"dgCMatrix\"\n                           s0\n(Intercept)         13.417729\nFull_Online          1.576391\nSecond_Half_Session  1.399350"
  },
  {
    "objectID": "presentation.html#check-columns-of-the-dew-rates-data-set",
    "href": "presentation.html#check-columns-of-the-dew-rates-data-set",
    "title": "Descriptive Analysis of Grade Outcomes",
    "section": "Check columns of the “DEW Rates” data set",
    "text": "Check columns of the “DEW Rates” data set\n\n\n\n\n\nX\nCollege\nDepartment\nSubject.Code\nCatalog.Number\nCourse.Description\nCourse.Level\nTotal.Student.Count\nD_GRADE_COUNT\nFAIL_GRADE_COUNT\nWITHDRAW_GRADE_COUNT\nDEW_COUNT\nPASS_GRADE_COUNT\nWITHDRAW_FULLMED_GRADE_COUNT\nINCOMPLETE_UNGRADED_COUNT\nTERM_LD\nACAD_YR_SID\nPercent.D.Grade\nPercent.E.Grade\nPercent.W.Grade\nPercent.DEW\nPercent.Passed\nPer.Full..Medical.Withdrawal\nPer.Ungraded..Incomplete\n\n\n\n\n1\nCollege of Engineering\nAerospace & Mechanical Engr\nABE\n489A\nFab Tech Micro+Nanodevic\nUpper Division\n10\n0\n0\n0\n0\n10\n0\n0\nFall 2018\n2019\n0.0\n0.0\n0.0\n0.0\n100.0\n0.0\n0\n\n\n2\nCollege of Engineering\nAerospace & Mechanical Engr\nAME\n105\nIntroduction to MATLAB I\nLower Division\n196\n17\n2\n1\n20\n173\n3\n0\nFall 2018\n2019\n8.7\n1.0\n0.5\n10.2\n88.3\n1.5\n0\n\n\n3\nCollege of Engineering\nAerospace & Mechanical Engr\nAME\n105\nIntroduction to MATLAB I\nLower Division\n160\n22\n17\n3\n42\n115\n3\n0\nFall 2019\n2020\n13.8\n10.6\n1.9\n26.3\n71.9\n1.9\n0\n\n\n4\nCollege of Engineering\nAerospace & Mechanical Engr\nAME\n105\nIntroduction to MATLAB I\nLower Division\n111\n11\n4\n5\n20\n82\n9\n0\nFall 2020\n2021\n9.9\n3.6\n4.5\n18.0\n73.9\n8.1\n0\n\n\n5\nCollege of Engineering\nAerospace & Mechanical Engr\nAME\n105\nIntroduction to MATLAB I\nLower Division\n254\n11\n5\n6\n22\n231\n1\n0\nSpring 2019\n2019\n4.3\n2.0\n2.4\n8.7\n90.9\n0.4\n0\n\n\n6\nCollege of Engineering\nAerospace & Mechanical Engr\nAME\n105\nIntroduction to MATLAB I\nLower Division\n213\n3\n9\n19\n31\n182\n0\n0\nSpring 2020\n2020\n1.4\n4.2\n8.9\n14.6\n85.4\n0.0\n0"
  },
  {
    "objectID": "presentation.html#check-columns-of-the-course-attributes-data-set",
    "href": "presentation.html#check-columns-of-the-course-attributes-data-set",
    "title": "Descriptive Analysis of Grade Outcomes",
    "section": "Check columns of the “Course Attributes” data set",
    "text": "Check columns of the “Course Attributes” data set\n\n\n\n\n\nX\nCourse.Identifier\nCollege\nDepartment\nMerged\nSubject.Code\nCatalog.Number\nCourse.Description\nCourse.Level\nTotal.Student.Count\nD_GRADE_COUNT\nFAIL_GRADE_COUNT\nWITHDRAW_GRADE_COUNT\nDEW_COUNT\nPASS_GRADE_COUNT\nWITHDRAW_FULLMED_GRADE_COUNT\nINCOMPLETE_UNGRADED_COUNT\nTERM_LD\nACAD_YR_SID\nPercent.D.Grade\nPercent.E.Grade\nPercent.W.Grade\nPercent.DEW\nPercent.Passed\nPer.Full..Medical.Withdrawal\nPer.Ungraded..Incomplete\nP.F.Opt\nUnits\nMode\nClass..\nSections\nTotal.Enroll\nMax.Enroll\nRm.Cap\nEarly_Morning\nMid_Morning\nEarly_Afternoon\nMid_Afternoon\nEvening\nAsynchronous\nMonday\nTuesday\nWednesday\nThursday\nFriday\nSaturday\nSunday\nLaboratory\nLecture\nColloquim\nSeminar\nWorkshop\nDiscussion\nStudio\nPracticum\nIn_Person\nFull_Online\nIntractTV\nHybrid\nLive_Online\nReg_Session\nFirst_Half_Session\nSecond_Half_Session\nFirst_Third_Session\nSecond_Third_Session\nThird_Third_Session\nTen_Week\nThirteen_Week\nOther\nCollege_Number\n\n\n\n\n1\nFall 2019_ACBS_102L\nCollege of Agric and Life Sci\nAnimal&Biomedical Sciences-Ins\nACBS_102L\nACBS\n102L\nIntro to Animal Sci Lab\nLower Division\n250\n8\n7\n3\n18\n229\n3\n0\nFall 2019\n2020\n3.2\n2.8\n1.2\n7.2\n91.6\n1.2\n0\n\n1\nIn Person\n450809\n8\n250\n280\n8\n0\n0\n8\n0\n0\n0\n0\n4\n0\n4\n0\n0\n0\n8\n0\n0\n0\n0\n0\n0\n0\n8\n0\n0\n0\n0\n8\n0\n0\n0\n0\n0\n0\n0\n0\n1\n\n\n2\nFall 2019_ACBS_102R\nCollege of Agric and Life Sci\nAnimal&Biomedical Sciences-Ins\nACBS_102R\nACBS\n102R\nIntrod to Animal Science\nLower Division\n267\n7\n10\n2\n19\n244\n4\n0\nFall 2019\n2020\n2.6\n3.7\n0.7\n7.1\n91.4\n1.5\n0\n\n3\nIn Person\n41166\n1\n267\n299\n300\n1\n0\n0\n0\n0\n0\n0\n1\n0\n1\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n1\n\n\n3\nFall 2019_ACBS_142\nCollege of Agric and Life Sci\nAnimal&Biomedical Sciences-Ins\nACBS_142\nACBS\n142\nIntro Anml Racing Indus\nLower Division\n28\n0\n2\n0\n2\n26\n0\n0\nFall 2019\n2020\n0.0\n7.1\n0.0\n7.1\n92.9\n0.0\n0\n\n2\nIn Person\n25697\n1\n28\n20\n80\n1\n0\n0\n0\n0\n0\n1\n0\n1\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n1\n\n\n4\nFall 2019_ACBS_160D1\nCollege of Agric and Life Sci\nAnimal&Biomedical Sciences-Ins\nACBS_160D1\nACBS\n160D1\nHum+Anml Interl Dom-Pres\nLower Division\n681\n30\n72\n8\n110\n561\n10\n0\nFall 2019\n2020\n4.4\n10.6\n1.2\n16.2\n82.4\n1.5\n0\n\n3\nIn Person\n95423\n2\n481\n707\n912\n1\n1\n0\n0\n0\n0\n2\n0\n2\n0\n2\n0\n0\n0\n2\n0\n0\n0\n0\n0\n0\n2\n0\n0\n0\n0\n2\n0\n0\n0\n0\n0\n0\n0\n0\n1\n\n\n5\nFall 2019_ACBS_160D1\nCollege of Agric and Life Sci\nAnimal&Biomedical Sciences-Ins\nACBS_160D1\nACBS\n160D1\nHum+Anml Interl Dom-Pres\nLower Division\n681\n30\n72\n8\n110\n561\n10\n0\nFall 2019\n2020\n4.4\n10.6\n1.2\n16.2\n82.4\n1.5\n0\n\n3\nFullOnline\n67075\n1\n200\n200\n1\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n1\n\n\n6\nFall 2019_ACBS_195F\nCollege of Agric and Life Sci\nAnimal&Biomedical Sciences-Ins\nACBS_195F\nACBS\n195F\nCareers/Veterinary Sci\nLower Division\n205\n11\n17\n1\n29\n173\n3\n0\nFall 2019\n2020\n5.4\n8.3\n0.5\n14.1\n84.4\n1.5\n0\n\n1\nIn Person\n38050\n1\n205\n190\n300\n0\n1\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n1"
  },
  {
    "objectID": "presentation.html#total-course-offering-for-each-college-per-semester",
    "href": "presentation.html#total-course-offering-for-each-college-per-semester",
    "title": "Descriptive Analysis of Grade Outcomes",
    "section": "Total course offering for each college per semester",
    "text": "Total course offering for each college per semester\n\n\n\n\n\nCollege\nFall 2018\nFall 2019\nFall 2020\nSpring 2019\nSpring 2020\nSpring 2021\n\n\n\n\nCollege of Agric and Life Sci\n219\n224\n247\n230\n236\n225\n\n\nCollege of Applied Sci & Tech\n124\n117\n112\n123\n119\n107\n\n\nCollege of Education\n89\n96\n96\n92\n97\n105\n\n\nCollege of Engineering\n149\n157\n143\n165\n171\n169\n\n\nCollege of Fine Arts\n260\n259\n230\n265\n259\n239\n\n\nCollege of Humanities\n242\n245\n257\n244\n272\n276\n\n\nCollege of Medicine - Tucson\n22\n27\n28\n29\n35\n36\n\n\nCollege of Nursing\n12\n16\n20\n11\n21\n21\n\n\nCollege of Public Health\n27\n31\n30\n27\n31\n34\n\n\nCollege of Science\n274\n269\n279\n290\n290\n299\n\n\nCollege of Social & Behav Sci\n540\n531\n537\n553\n585\n566\n\n\nColleges of Letters Arts & Sci\n7\n7\nNA\n5\n4\nNA\n\n\nEller College of Management\n125\n128\n121\n137\n141\n125\n\n\nGraduate College\n12\n13\n16\n14\n14\n13\n\n\nJames E Rogers College of Law\n20\n20\n25\n21\n24\n29\n\n\nR Ken Coit College of Pharmacy\n5\n6\n7\n5\n8\n8\n\n\nW.A. Franke Honors College\n15\n11\n10\n21\n17\n18\n\n\n\n\n\n\n\nThen, we limited focus to the top 5 colleges by course enrollment."
  },
  {
    "objectID": "presentation.html#section-1",
    "href": "presentation.html#section-1",
    "title": "Descriptive Analysis of Grade Outcomes",
    "section": "",
    "text": "Then, we looked at the total student enrollment for each college per semester.\n\n\n\nTotal Student Enrollment for Each College per Semester\n\n\nCollege\nFall 2018\nFall 2019\nFall 2020\nSpring 2019\nSpring 2020\nSpring 2021\n\n\n\n\nCollege of Agric and Life Sci\n13310\n14409\n16574\n11688\n13396\n13945\n\n\nCollege of Humanities\n19290\n19456\n19706\n18553\n18814\n18276\n\n\nCollege of Science\n39301\n39964\n39898\n35013\n34275\n34832\n\n\nCollege of Social & Behav Sci\n33478\n31942\n31961\n31092\n31231\n30813\n\n\nEller College of Management\n20425\n19985\n19586\n18923\n18712\n18047\n\n\n\n\n\n\n\nWe also looked at the total D, E, and W grade counts for each college per semester.\n\n\n\nTotal D, F, W Grade Counts for Each College per Semester\n\n\nCollege\nFall 2018\nFall 2019\nFall 2020\nSpring 2019\nSpring 2020\nSpring 2021\n\n\n\n\nCollege of Agric and Life Sci\n1405\n1458\n2041\n1160\n1039\n1625\n\n\nCollege of Humanities\n2760\n2678\n3081\n2509\n2377\n2934\n\n\nCollege of Science\n7879\n7389\n7148\n6705\n3871\n6023\n\n\nCollege of Social & Behav Sci\n4704\n4296\n5043\n4263\n3348\n4615\n\n\nEller College of Management\n2501\n2175\n2203\n1906\n950\n1730"
  },
  {
    "objectID": "presentation.html#section-2",
    "href": "presentation.html#section-2",
    "title": "Descriptive Analysis of Grade Outcomes",
    "section": "",
    "text": "We calculated the mean averages for the pass, D, E, W, and DEW rates across the five selected colleges.\n\n\n\nMeans for Total Pass, D, E, W, and Total DEW Counts Across Colleges\n\n\nCollege\nPASS GRADE COUNT\nD GRADE COUNT\nFAIL GRADE COUNT\nWITHDRAW GRADE COUNT\nDEW COUNT\n\n\n\n\nCollege of Agric and Life Sci\n53.17\n1.81\n2.74\n1.77\n6.32\n\n\nCollege of Humanities\n62.16\n2.36\n4.89\n3.38\n10.64\n\n\nCollege of Science\n105.84\n7.36\n8.82\n6.76\n22.94\n\n\nCollege of Social & Behav Sci\n48.42\n1.90\n3.60\n2.43\n7.93\n\n\nEller College of Management\n132.50\n5.62\n4.97\n4.16\n14.76"
  },
  {
    "objectID": "presentation.html#histogram-of-dew-percentages",
    "href": "presentation.html#histogram-of-dew-percentages",
    "title": "Descriptive Analysis of Grade Outcomes",
    "section": "Histogram of DEW Percentages",
    "text": "Histogram of DEW Percentages"
  },
  {
    "objectID": "presentation.html#box-plot-of-dew-percents",
    "href": "presentation.html#box-plot-of-dew-percents",
    "title": "Descriptive Analysis of Grade Outcomes",
    "section": "Box Plot of DEW Percents",
    "text": "Box Plot of DEW Percents"
  },
  {
    "objectID": "presentation.html#table-of-high-dew-percent-courses",
    "href": "presentation.html#table-of-high-dew-percent-courses",
    "title": "Descriptive Analysis of Grade Outcomes",
    "section": "Table of High DEW Percent Courses",
    "text": "Table of High DEW Percent Courses"
  },
  {
    "objectID": "presentation.html#table-of-high-dew-courses-social-and-behavioral-sciences",
    "href": "presentation.html#table-of-high-dew-courses-social-and-behavioral-sciences",
    "title": "Descriptive Analysis of Grade Outcomes",
    "section": "Table of High DEW Courses Social and Behavioral Sciences",
    "text": "Table of High DEW Courses Social and Behavioral Sciences"
  },
  {
    "objectID": "presentation.html#time-series-analysis",
    "href": "presentation.html#time-series-analysis",
    "title": "Descriptive Analysis of Grade Outcomes",
    "section": "Time Series Analysis",
    "text": "Time Series Analysis\nTime series analysis is a statistical method used to analyze and interpret sequential data points collected and ordered over time. It involves examining patterns, trends, and behaviors within the dataset to understand how the data evolves and changes across different time intervals."
  },
  {
    "objectID": "presentation.html#plot-1",
    "href": "presentation.html#plot-1",
    "title": "Descriptive Analysis of Grade Outcomes",
    "section": "Plot 1",
    "text": "Plot 1\n\nTotal DEW Count for different colleges changed over different Terms"
  },
  {
    "objectID": "presentation.html#plot-2",
    "href": "presentation.html#plot-2",
    "title": "Descriptive Analysis of Grade Outcomes",
    "section": "Plot 2",
    "text": "Plot 2\n\nTotal D, E (fail) and W (withdraw) count for different colleges changed over different Terms"
  },
  {
    "objectID": "presentation.html#plot-3",
    "href": "presentation.html#plot-3",
    "title": "Descriptive Analysis of Grade Outcomes",
    "section": "Plot 3",
    "text": "Plot 3\n\nTotal Classes Attended in Different Time Slots for Colleges changed over different Terms"
  },
  {
    "objectID": "presentation.html#code",
    "href": "presentation.html#code",
    "title": "Descriptive Analysis of Grade Outcomes",
    "section": "Code",
    "text": "Code\nfiltered_data1 &lt;- data %&gt;% filter(Sections &lt;= 1)\nfiltered_data1$DEW_COUNT[filtered_data1$Percent.DEW &lt;= 12.2] &lt;- 'Low'\nfiltered_data1$DEW_COUNT[filtered_data1$Percent.DEW &gt; 12.2] &lt;- 'High'\nfiltered_data1$DEW_COUNT &lt;- as.factor(filtered_data1$DEW_COUNT)\ntree_data &lt;- select(filtered_data1, DEW_COUNT, Full_Online, Hybrid, Live_Online, Reg_Session, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday, Early_Morning, Mid_Morning, Early_Afternoon, Mid_Afternoon, Evening, Asynchronous )\ncol_names &lt;- c(\"Full_Online\", \"Hybrid\", \"Live_Online\", \"Reg_Session\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\", \"Early_Morning\", \"Mid_Morning\", \"Early_Afternoon\", \"Mid_Afternoon\", \"Evening\", \"Asynchronous\" )\ntree_data[col_names] &lt;- sapply(tree_data[col_names], as.logical)\ntree_default &lt;- tree_data |&gt;\nrpart( DEW_COUNT~., data = _)\nrpart.plot(tree_default)"
  },
  {
    "objectID": "presentation.html#plot",
    "href": "presentation.html#plot",
    "title": "Descriptive Analysis of Grade Outcomes",
    "section": "Plot",
    "text": "Plot\n\nThe decision tree predicts “High” if Full_Online is &gt;= 0.5; otherwise, it predicts “Low.” Tree building stops when additional splits don’t significantly improve performance or when there are insufficient observations for further splitting."
  },
  {
    "objectID": "presentation.html#correlate---mode-of-class",
    "href": "presentation.html#correlate---mode-of-class",
    "title": "Descriptive Analysis of Grade Outcomes",
    "section": "Correlate - Mode of Class",
    "text": "Correlate - Mode of Class\nCorrelation of Percent DEW, In- Person, Full Online, Hybrid, Live-online"
  },
  {
    "objectID": "presentation.html#correlate---sessions",
    "href": "presentation.html#correlate---sessions",
    "title": "Descriptive Analysis of Grade Outcomes",
    "section": "Correlate - Sessions",
    "text": "Correlate - Sessions"
  },
  {
    "objectID": "presentation.html#selected-features",
    "href": "presentation.html#selected-features",
    "title": "Descriptive Analysis of Grade Outcomes",
    "section": "Selected Features",
    "text": "Selected Features\n\n- Percent.DEW\n- Full_Online\n- Second_Half_Session"
  },
  {
    "objectID": "presentation.html#multilinear-regression",
    "href": "presentation.html#multilinear-regression",
    "title": "Descriptive Analysis of Grade Outcomes",
    "section": "Multilinear Regression",
    "text": "Multilinear Regression\n{r}\n# Perform multiple linear regression\nmodel &lt;- lm(Percent.DEW ~ Second_Half_Session + Full_Online, data = model_data)\n# Create a linear regression model specification\nlin_reg_spec &lt;- linear_reg() |&gt;\n  set_engine(\"lm\")\n# Fit the model to the training data\nlin_reg_fit &lt;- lin_reg_spec |&gt;\n  fit(y ~ X, data = train_data)\n# Apply model to the test set\ny_pred_test &lt;- predict(lin_reg_fit, new_data = test_data) |&gt;\n  pull(.pred)"
  },
  {
    "objectID": "presentation.html#predicted-function",
    "href": "presentation.html#predicted-function",
    "title": "Descriptive Analysis of Grade Outcomes",
    "section": "Predicted Function",
    "text": "Predicted Function"
  },
  {
    "objectID": "presentation.html#lasso-regression",
    "href": "presentation.html#lasso-regression",
    "title": "Descriptive Analysis of Grade Outcomes",
    "section": "Lasso Regression",
    "text": "Lasso Regression"
  },
  {
    "objectID": "presentation.html#lasso---training-and-testing-error",
    "href": "presentation.html#lasso---training-and-testing-error",
    "title": "Descriptive Analysis of Grade Outcomes",
    "section": "Lasso - Training and Testing Error",
    "text": "Lasso - Training and Testing Error"
  },
  {
    "objectID": "EDA_Grade_Outcomes.html",
    "href": "EDA_Grade_Outcomes.html",
    "title": "Exploratory Data Analysis of Grade Outcomes Data",
    "section": "",
    "text": "Load Libraries\nsuppressWarnings(library(tidyverse))\nlibrary(knitr)\nlibrary(lubridate)\nlibrary(ggplot2)\nRead in Data\n# read in data\ndew_data &lt;- read.csv(\"data/clean_dew_data.csv\")\nkable(head(dew_data))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nX\nCollege\nDepartment\nSubject.Code\nCatalog.Number\nCourse.Description\nCourse.Level\nTotal.Student.Count\nD_GRADE_COUNT\nFAIL_GRADE_COUNT\nWITHDRAW_GRADE_COUNT\nDEW_COUNT\nPASS_GRADE_COUNT\nWITHDRAW_FULLMED_GRADE_COUNT\nINCOMPLETE_UNGRADED_COUNT\nTERM_LD\nACAD_YR_SID\nPercent.D.Grade\nPercent.E.Grade\nPercent.W.Grade\nPercent.DEW\nPercent.Passed\nPer.Full..Medical.Withdrawal\nPer.Ungraded..Incomplete\n\n\n\n\n1\nCollege of Engineering\nAerospace & Mechanical Engr\nABE\n489A\nFab Tech Micro+Nanodevic\nUpper Division\n10\n0\n0\n0\n0\n10\n0\n0\nFall 2018\n2019\n0.0\n0.0\n0.0\n0.0\n100.0\n0.0\n0\n\n\n2\nCollege of Engineering\nAerospace & Mechanical Engr\nAME\n105\nIntroduction to MATLAB I\nLower Division\n196\n17\n2\n1\n20\n173\n3\n0\nFall 2018\n2019\n8.7\n1.0\n0.5\n10.2\n88.3\n1.5\n0\n\n\n3\nCollege of Engineering\nAerospace & Mechanical Engr\nAME\n105\nIntroduction to MATLAB I\nLower Division\n160\n22\n17\n3\n42\n115\n3\n0\nFall 2019\n2020\n13.8\n10.6\n1.9\n26.3\n71.9\n1.9\n0\n\n\n4\nCollege of Engineering\nAerospace & Mechanical Engr\nAME\n105\nIntroduction to MATLAB I\nLower Division\n111\n11\n4\n5\n20\n82\n9\n0\nFall 2020\n2021\n9.9\n3.6\n4.5\n18.0\n73.9\n8.1\n0\n\n\n5\nCollege of Engineering\nAerospace & Mechanical Engr\nAME\n105\nIntroduction to MATLAB I\nLower Division\n254\n11\n5\n6\n22\n231\n1\n0\nSpring 2019\n2019\n4.3\n2.0\n2.4\n8.7\n90.9\n0.4\n0\n\n\n6\nCollege of Engineering\nAerospace & Mechanical Engr\nAME\n105\nIntroduction to MATLAB I\nLower Division\n213\n3\n9\n19\n31\n182\n0\n0\nSpring 2020\n2020\n1.4\n4.2\n8.9\n14.6\n85.4\n0.0\n0\nAdd brief description of data"
  },
  {
    "objectID": "EDA_Grade_Outcomes.html#total-number-of-courses-per-semester---k",
    "href": "EDA_Grade_Outcomes.html#total-number-of-courses-per-semester---k",
    "title": "Exploratory Data Analysis of Grade Outcomes Data",
    "section": "Total number of courses per semester - K",
    "text": "Total number of courses per semester - K\n\n\nsummary of total courses\n# add the column names\ntable1&lt;- dew_data %&gt;% group_by(College) %&gt;% count(TERM_LD)\ntable1 &lt;- table1 %&gt;% pivot_wider(names_from = TERM_LD, values_from = n)\nkable(table1, caption = \"Total Course Offering for Each College per Semester\")\n\n\n\nTotal Course Offering for Each College per Semester\n\n\n\n\n\n\n\n\n\n\n\nCollege\nFall 2018\nFall 2019\nFall 2020\nSpring 2019\nSpring 2020\nSpring 2021\n\n\n\n\nCollege of Agric and Life Sci\n219\n224\n247\n230\n236\n225\n\n\nCollege of Applied Sci & Tech\n124\n117\n112\n123\n119\n107\n\n\nCollege of Education\n89\n96\n96\n92\n97\n105\n\n\nCollege of Engineering\n149\n157\n143\n165\n171\n169\n\n\nCollege of Fine Arts\n260\n259\n230\n265\n259\n239\n\n\nCollege of Humanities\n242\n245\n257\n244\n272\n276\n\n\nCollege of Medicine - Tucson\n22\n27\n28\n29\n35\n36\n\n\nCollege of Nursing\n12\n16\n20\n11\n21\n21\n\n\nCollege of Public Health\n27\n31\n30\n27\n31\n34\n\n\nCollege of Science\n274\n269\n279\n290\n290\n299\n\n\nCollege of Social & Behav Sci\n540\n531\n537\n553\n585\n566\n\n\nColleges of Letters Arts & Sci\n7\n7\nNA\n5\n4\nNA\n\n\nEller College of Management\n125\n128\n121\n137\n141\n125\n\n\nGraduate College\n12\n13\n16\n14\n14\n13\n\n\nJames E Rogers College of Law\n20\n20\n25\n21\n24\n29\n\n\nR Ken Coit College of Pharmacy\n5\n6\n7\n5\n8\n8\n\n\nW.A. Franke Honors College\n15\n11\n10\n21\n17\n18\n\n\n\n\n\nAfter examining this data, we are limiting the colleges to x,y, z because a, b,c .\n\n\nremove low course offering colleges\ndew_data &lt;- dew_data %&gt;% filter(College != \"College of Medicine - Tucson\",\n                                College != \"College of Nursing\",\n                                College != \"College of Public Health\",\n                                College != \"Colleges of Letters Arts & Sci\",\n                                College != \"Graduate College\",\n                                College != \"James E Rogers College of Law\",\n                                College != \"R Ken Coit College of Pharmacy\",\n                                College != \"W.A. Franke Honors College\")\n\n\n\n\nsummary of total enrollment\n# total enrollment table\nenrollment &lt;- aggregate(Total.Student.Count~College + TERM_LD, data=dew_data, sum)\nenrollment &lt;- enrollment %&gt;% pivot_wider(names_from = TERM_LD, values_from = Total.Student.Count)\nkable(enrollment, caption =  \"Total Student Enrollment for Each College per Semester\")\n\n\n\nTotal Student Enrollment for Each College per Semester\n\n\n\n\n\n\n\n\n\n\n\nCollege\nFall 2018\nFall 2019\nFall 2020\nSpring 2019\nSpring 2020\nSpring 2021\n\n\n\n\nCollege of Agric and Life Sci\n13310\n14409\n16574\n11688\n13396\n13945\n\n\nCollege of Applied Sci & Tech\n2703\n3094\n3735\n2766\n2937\n3772\n\n\nCollege of Education\n4630\n4947\n6200\n4484\n4935\n5274\n\n\nCollege of Engineering\n9310\n9515\n8576\n8298\n8151\n7874\n\n\nCollege of Fine Arts\n9899\n10276\n9243\n9216\n9686\n8439\n\n\nCollege of Humanities\n19290\n19456\n19706\n18553\n18814\n18276\n\n\nCollege of Science\n39301\n39964\n39898\n35013\n34275\n34832\n\n\nCollege of Social & Behav Sci\n33478\n31942\n31961\n31092\n31231\n30813\n\n\nEller College of Management\n20425\n19985\n19586\n18923\n18712\n18047\n\n\n\n\n\n\n\nsummary of total enrollment\ndew_total &lt;- aggregate(DEW_COUNT~College + TERM_LD, data=dew_data, sum)\ndew_total &lt;- dew_total %&gt;% pivot_wider(names_from = TERM_LD, values_from = DEW_COUNT)\nkable(dew_total, caption =  \"Total D, F, W Grade Counts for Each College per Semester\")\n\n\n\nTotal D, F, W Grade Counts for Each College per Semester\n\n\n\n\n\n\n\n\n\n\n\nCollege\nFall 2018\nFall 2019\nFall 2020\nSpring 2019\nSpring 2020\nSpring 2021\n\n\n\n\nCollege of Agric and Life Sci\n1405\n1458\n2041\n1160\n1039\n1625\n\n\nCollege of Applied Sci & Tech\n308\n391\n481\n349\n328\n534\n\n\nCollege of Education\n325\n397\n606\n323\n292\n429\n\n\nCollege of Engineering\n723\n727\n865\n690\n419\n778\n\n\nCollege of Fine Arts\n832\n813\n896\n669\n717\n636\n\n\nCollege of Humanities\n2760\n2678\n3081\n2509\n2377\n2934\n\n\nCollege of Science\n7879\n7389\n7148\n6705\n3871\n6023\n\n\nCollege of Social & Behav Sci\n4704\n4296\n5043\n4263\n3348\n4615\n\n\nEller College of Management\n2501\n2175\n2203\n1906\n950\n1730\n\n\n\n\n\nGo down to just top 5 colleges\n\n\nsummary of total enrollment\ndew_data &lt;- dew_data %&gt;% filter(College != \"College of Applied Sci & Tech\",\n                                College != \"College of Education\",\n                                College != \"College of Engineering\",\n                                College != \"College of Fine Arts\")"
  },
  {
    "objectID": "EDA_Grade_Outcomes.html#overall-averages---r",
    "href": "EDA_Grade_Outcomes.html#overall-averages---r",
    "title": "Exploratory Data Analysis of Grade Outcomes Data",
    "section": "Overall Averages - R",
    "text": "Overall Averages - R\n\n\naverage number of students per course\nstudent_per_course &lt;- aggregate(Total.Student.Count ~College + TERM_LD, data=dew_data, mean)\n# round to nearest whole digit\nstudent_per_course$Total.Student.Count &lt;- round(student_per_course$Total.Student.Count)\n# pivot wider\nstudent_per_course &lt;- student_per_course %&gt;% pivot_wider(names_from = TERM_LD, values_from = Total.Student.Count)\n# display table\nkable(student_per_course, caption =  \"Average Number of Students per Course by College Each Semester\")\n\n\n\nAverage Number of Students per Course by College Each Semester\n\n\n\n\n\n\n\n\n\n\n\nCollege\nFall 2018\nFall 2019\nFall 2020\nSpring 2019\nSpring 2020\nSpring 2021\n\n\n\n\nCollege of Agric and Life Sci\n61\n64\n67\n51\n57\n62\n\n\nCollege of Humanities\n80\n79\n77\n76\n69\n66\n\n\nCollege of Science\n143\n149\n143\n121\n118\n116\n\n\nCollege of Social & Behav Sci\n62\n60\n60\n56\n53\n54\n\n\nEller College of Management\n163\n156\n162\n138\n133\n144\n\n\n\n\n\n\n\naverage number of students per course\ndew_per_course &lt;- aggregate(Percent.DEW ~College + TERM_LD, data=dew_data, mean)\n# round to 2 digits\ndew_per_course$Percent.DEW &lt;- round(dew_per_course$Percent.DEW, 2)\n# pivot wider\ndew_per_course &lt;- dew_per_course %&gt;% pivot_wider(names_from = TERM_LD, values_from = Percent.DEW)\n# display table\nkable(dew_per_course, caption =  \"Average Number of D, F, and W Grade(percentage) per Course by College Each Semester\")\n\n\n\nAverage Number of D, F, and W Grade(percentage) per Course by College Each Semester\n\n\n\n\n\n\n\n\n\n\n\nCollege\nFall 2018\nFall 2019\nFall 2020\nSpring 2019\nSpring 2020\nSpring 2021\n\n\n\n\nCollege of Agric and Life Sci\n9.30\n8.46\n11.42\n8.40\n7.33\n10.28\n\n\nCollege of Humanities\n13.85\n13.62\n14.79\n13.30\n12.92\n15.32\n\n\nCollege of Science\n14.84\n14.05\n15.08\n14.23\n9.99\n13.83\n\n\nCollege of Social & Behav Sci\n13.22\n13.71\n14.50\n13.56\n11.37\n13.64\n\n\nEller College of Management\n7.66\n7.54\n6.97\n6.76\n3.63\n5.78\n\n\n\n\n\nDespite enrollment staying steady, we see a noticeable decrease in DEW outcomes for the spring of 2020. Followed by an increase for the fall of 2020."
  },
  {
    "objectID": "EDA_Grade_Outcomes.html#averages-by-college--r",
    "href": "EDA_Grade_Outcomes.html#averages-by-college--r",
    "title": "Exploratory Data Analysis of Grade Outcomes Data",
    "section": "Averages by College -R",
    "text": "Averages by College -R\nCalc the mean averages overall - high - enrollemnt, pass, d, e, w, dew\nVisualiaze in bar\n\n# Assuming you have the ggplot2 library installed\n# If not, install it using install.packages(\"ggplot2\")\nlibrary(ggplot2)\n\ndew_data1 &lt;- read.csv(\"data/study_data.csv\")\n\n# Define the order of variables\nvariable_order &lt;- c( \"Percent.Passed\", \"Percent.D.Grade\", \"Percent.E.Grade\", \"Percent.W.Grade\", \"Percent.DEW\")\n\n# Creating a data frame with the means\nmeans_data &lt;- data.frame(\n  Variable = factor(variable_order, levels = variable_order),\n  Mean_Value = c(\n    mean(dew_data1$Percent.Passed),\n    mean(dew_data1$Percent.D.Grade),\n    mean(dew_data1$Percent.E.Grade),\n    mean(dew_data1$Percent.W.Grade),\n    mean(dew_data1$Percent.DEW)\n  )\n)\n\n# Creating a bar plot\nggplot(means_data, aes(x = Variable, y = Mean_Value, fill = Variable)) +\n  geom_bar(stat = \"identity\") +\n  geom_text(aes(label = round(Mean_Value, 2)), vjust = -0.5, size = 3) +  # Add text labels\n  labs(title = \"Mean of Percentages of Pass and D.E.W Grades\",\n       x = \"Variables\",\n       y = \"Mean Value\") +\n  theme_minimal()+\n  theme_linedraw()+\n  theme(legend.position = \"bottom\", panel.grid = element_blank())\n\n\n\n\n\n# Assuming you have the dplyr, knitr, and stringr libraries installed\n# If not, install them using install.packages(c(\"dplyr\", \"knitr\", \"stringr\"))\nlibrary(dplyr)\nlibrary(knitr)\nlibrary(stringr)\n\n# Group by College and calculate the mean for each grade-related column\ncollege_means_data &lt;- dew_data %&gt;%\n  group_by(College) %&gt;%\n  summarise(PASS_GRADE_COUNT = mean(PASS_GRADE_COUNT),\n            D_GRADE_COUNT = mean(D_GRADE_COUNT),\n            FAIL_GRADE_COUNT = mean(FAIL_GRADE_COUNT),\n            WITHDRAW_GRADE_COUNT = mean(WITHDRAW_GRADE_COUNT),\n            DEW_COUNT = mean(DEW_COUNT))\n\n# Remove underscores from column names\nnames(college_means_data) &lt;- str_replace_all(names(college_means_data), \"_\", \" \")\n\n# Round off mean values to two decimal points\ncollege_means_data[, -1] &lt;- round(college_means_data[, -1], 2)\n\n# Create a kable table for means of each grade-related column for each college\nkable(college_means_data, \n               caption = \"Means for Total Pass, D, E, W, and Total DEW Counts Across Colleges\")\n\n\nMeans for Total Pass, D, E, W, and Total DEW Counts Across Colleges\n\n\n\n\n\n\n\n\n\n\nCollege\nPASS GRADE COUNT\nD GRADE COUNT\nFAIL GRADE COUNT\nWITHDRAW GRADE COUNT\nDEW COUNT\n\n\n\n\nCollege of Agric and Life Sci\n53.17\n1.81\n2.74\n1.77\n6.32\n\n\nCollege of Humanities\n62.16\n2.36\n4.89\n3.38\n10.64\n\n\nCollege of Science\n105.84\n7.36\n8.82\n6.76\n22.94\n\n\nCollege of Social & Behav Sci\n48.42\n1.90\n3.60\n2.43\n7.93\n\n\nEller College of Management\n132.50\n5.62\n4.97\n4.16\n14.76"
  },
  {
    "objectID": "Anomaly_Detection.html",
    "href": "Anomaly_Detection.html",
    "title": "Anomaly Detection",
    "section": "",
    "text": "Load Libraries\nsuppressWarnings(library(tidyverse))\nlibrary(knitr)\nlibrary(lubridate)\nlibrary(ggplot2)\nlibrary(dplyr)\n\n\n\n\nRead in Data\n# read in data\nanomaly_data &lt;- read.csv(\"data/study_data.csv\")\n\n\n\n\nIn order to identify patterns or trends in the Grade Outcomes, we wanted to better understand the current anomalies in the data. We focused on trying to identify outliers that had a high value of poor grade outcomes. We decided to base this anomaly detection on the percentage of D, E, or W grades for a course. This decision was made so that high enrollment courses, such as English 101 with enrollment over 3500, would not further skew the data. We began by examining the quartiles for the D.E.W. Percentage.\n\n\nQuartiles for DEW Percents\nsummary(anomaly_data$Percent.DEW)\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    4.00   10.25   12.55   18.20   85.70 \n\n\nHere we verify that mean value is the 12.55% as we found in the initial EDA. We also see where the cut off values are for the quartiles. The first quartile or bottom 25% of the data are DEW percent values of less than 4%. The second quartile contains the DEW percents that range from 4% to 10.25%. The third quartile ranges from 10.25% to 18.2%. And the final quartile is all DEW percents of greater than 18.2%. This Histogram shows the distribution of these quartiles.\n\n\n\n\n\nHistogram of DEW Percentage\ng1 &lt;- ggplot(anomaly_data, aes(x = Percent.DEW)) +\n  geom_histogram(binwidth = 3, fill = \"blue\", color = \"black\", alpha = 0.8) +\n  labs(title = \"Histogram of DEW Percent\", x = \"Percent DEW\", y = \"Frequency\")\n\nggsave(\"images/g1.png\", plot=g1)\ng1\n\n\n\n\n\nIn the percentages of DEW for courses, we anticipated to see the data to be skewed to left as 75% of the data has a DEW percent is below 18.2%. This is clearly displayed in the above histogram. In the Histogram below we include only the top quartile of DEW percentages. This histogram allows us to more clearly see the frequency of DEW percentages over 30%.\n\n\nHistogram of Only Top 25% of DEW\n# create new df of the top quartile\nanomaly_25 &lt;- anomaly_data %&gt;% \n  filter(Percent.DEW&gt;19)\n\nggplot(anomaly_25, aes(x = Percent.DEW)) +\n  geom_histogram(binwidth = 2, fill = \"blue\", color = \"black\", alpha = 0.8) +\n  labs(title = \"Histogram of Only Top 25% of DEW Percent\", x = \"Percent DEW\", y = \"Frequency\")\n\n\n\n\n\n\n\n\nThe next step we took was to create box and whisker plots. The first plot seen below shows that the top 5 colleges DEW percentage. We can clearly see outliers for all colleges with the most outliers occurring in the College of Social and Behavioral Sciences.\n\n\nBox Plot of DEW Percent\nad1 &lt;- ggplot(anomaly_data, aes(y = College, x = Percent.DEW)) +\n  geom_boxplot(fill = \"lightblue\", color = \"black\") +\n  labs(title = \"Boxplot of Percent DEW\",  x = \"Percent DEW\", y=\"\")\nggsave(\"images/ad1.png\", plot=ad1)\n\n\nSaving 7 x 5 in image\n\n\nBox Plot of DEW Percent\nad1\n\n\n\n\n\nThe next plot shows how DEW Percentage for each mode for courses. The outliers seem to be evenly distributed across the types of different modes for courses and not isolated to a specific mode.\n\n\nBox Plot of DEW Percent by Term\nggplot(anomaly_data, aes(y = Mode, x = Percent.DEW)) +\n  geom_boxplot(fill = \"lightblue\", color = \"black\") +\n  labs(title = \"Boxplot of Percent DEW by Term\",  x = \"Percent DEW\", y=\"\")+\n    facet_wrap(~TERM_LD, ncol=2)\n\n\n\n\n\nWe confirmed this distribution by the below box and whisker plot that shows the mode by College. Once again the outliers are not isolated to a certain mode but fairly evenly distributed across the modes in all colleges.\n\n\nBox Plot of DEW Percent by College\nggplot(anomaly_data, aes(y = Mode, x = Percent.DEW)) +\n  geom_boxplot(fill = \"lightblue\", color = \"black\") +\n  labs(title = \"Boxplot of Percent DEW by College\",  x = \"Percent DEW\", y=\"\")+\n  facet_wrap(~College, ncol=3)\n\n\n\n\n\n\n\n\nAfter completing these bow plots, we decided to add a classification column that labeled any DEW percentage over 30% as High and all other percentages as Low. We determined this 30% cut off by using the box plots from above that showed outliers in all colleges and modes occurred above the 30% threshold. This creates a new data set with 528 observations. This mean that about 8% of courses from the original data are being considered for further analysis.\n\n\nCreate Classification\n# create column to label high dew percentage courses\nanomaly_data &lt;- anomaly_data %&gt;% \n  mutate(DEW_Class = case_when(\n    Percent.DEW &lt; 30 ~ 0,\n    Percent.DEW &gt;= 30 ~ 1\n  ))\n\n\n\n\nTable and Box Plot of High DEW Percentage Courses\nhigh_risk &lt;- anomaly_data %&gt;% \n  filter(DEW_Class &gt; 0)\n\nggplot(high_risk, aes(y = College, x = Percent.DEW)) +\n  geom_boxplot(fill = \"lightblue\", color = \"black\") +\n  labs(title = \"Boxplot of Percent DEW\",  x = \"Percent DEW\", y=\"\")\n\n\n\n\n\nTable and Box Plot of High DEW Percentage Courses\nhigh_total &lt;- aggregate(DEW_Class~College + TERM_LD, data=high_risk, sum)\nhigh_total &lt;- high_total %&gt;% pivot_wider(names_from = TERM_LD, values_from = DEW_Class)\nkable(high_total, caption =  \"Total High Risk Courses for Each College per Semester\")\n\n\n\nTotal High Risk Courses for Each College per Semester\n\n\n\n\n\n\n\n\n\nCollege\nFall 2019\nFall 2020\nSpring 2020\nSpring 2021\n\n\n\n\nCollege of Agric and Life Sci\n6\n12\n4\n6\n\n\nCollege of Humanities\n25\n27\n23\n45\n\n\nCollege of Science\n32\n49\n11\n54\n\n\nCollege of Social & Behav Sci\n46\n53\n48\n66\n\n\nEller College of Management\n11\n5\nNA\n5\n\n\n\n\n\nThis table shows that the most outliers defined as courses over 30% DEW percentage occurred in the College of Social and Behavioral Science. We can also see that the this college had the highest mean value in mean value in the data. The number of courses for this college and the College of Humanities stayed reasonable steady during the pandemic. However, we saw decreases in outliers for the rest of the colleges during the first semester of the pandemic followed by an increase to above pre-pandemic levels in the second semester. Most notably the College of Science dropped to just 11 High DEW percentage courses in the Spring of 2020 but spiked to 49 in the next semester. After reviewing this table, we decided to isolate the College of Social and Behavioral Sciences since the most occurrence of High DEW percentage courses. The below table shows the distribution of these courses in each department within this college.\n\n\nTable of High Risk Courses For College of Social and Behavioral Sciences by Department and Term\nhigh_soc &lt;- high_risk %&gt;% filter(College == \"College of Social & Behav Sci\")\nhigh_total &lt;- aggregate(DEW_Class~Department + TERM_LD, data=high_soc, sum)\nhigh_total &lt;- high_total %&gt;% pivot_wider(names_from = TERM_LD, values_from = DEW_Class)\nkable(high_total, caption =  \"Total High Risk Course for College of Social and Behavioral Sciences per Semester\")\n\n\n\nTotal High Risk Course for College of Social and Behavioral Sciences per Semester\n\n\n\n\n\n\n\n\n\nDepartment\nFall 2019\nFall 2020\nSpring 2020\nSpring 2021\n\n\n\n\nAZ Center for Judaic Studies\n2\nNA\n2\n3\n\n\nCommunication\n1\n1\nNA\nNA\n\n\nEnglish\n3\n1\n3\n6\n\n\nGender and Womens Studies\n1\n1\nNA\n2\n\n\nHistory\n8\n10\n15\n12\n\n\nLinguistics\n3\n7\n2\n6\n\n\nMexican American Studies\n1\nNA\nNA\nNA\n\n\nPhilosophy\n5\n9\n8\n6\n\n\nSch Geography, Dev & Environ\n7\n6\n6\n5\n\n\nSchool of Anthropology\n1\n7\n2\n6\n\n\nSchool of Govt & Public Policy\n1\n1\n1\n1\n\n\nSchool of Information\n6\n4\n4\n6\n\n\nSocial & Behavioral Sci Admin\n1\nNA\nNA\nNA\n\n\nSociology\n6\n4\n3\n7\n\n\nLatin American Area Center\nNA\n2\n1\n2\n\n\nJournalism\nNA\nNA\n1\nNA\n\n\nSch Middle E/N African Studies\nNA\nNA\nNA\n4\n\n\n\n\n\nThis table shows that the departments of History and Philosophy consistently have the most numbers of High DEW percentage courses across the four semesters being analyzed.\n\n\nTable of High Risk Courses For College of Social and Behavioral Sciences by Department and Mode\nhigh_soc &lt;- high_risk %&gt;% filter(College == \"College of Social & Behav Sci\")\nhigh_total &lt;- aggregate(DEW_Class~Department + Mode, data=high_soc, sum)\nhigh_total &lt;- high_total %&gt;% pivot_wider(names_from = Mode, values_from = DEW_Class)\nkable(high_total, caption =  \"Total High Risk Course for College of Social and Behavioral Sciences per Semester\")\n\n\n\nTotal High Risk Course for College of Social and Behavioral Sciences per Semester\n\n\n\n\n\n\n\n\n\nDepartment\nFullOnline\nHybrid\nIn Person\nLive Onln\n\n\n\n\nAZ Center for Judaic Studies\n5\n1\n1\nNA\n\n\nCommunication\n1\nNA\n1\nNA\n\n\nEnglish\n9\nNA\n2\n2\n\n\nGender and Womens Studies\n4\nNA\nNA\nNA\n\n\nHistory\n33\n2\n7\n3\n\n\nLatin American Area Center\n4\n1\nNA\nNA\n\n\nLinguistics\n12\nNA\n2\n4\n\n\nPhilosophy\n12\n2\n10\n4\n\n\nSch Geography, Dev & Environ\n7\n3\n9\n5\n\n\nSch Middle E/N African Studies\n2\nNA\nNA\n2\n\n\nSchool of Anthropology\n5\n1\n2\n8\n\n\nSchool of Govt & Public Policy\n1\n1\n1\n1\n\n\nSchool of Information\n10\nNA\n6\n4\n\n\nSociology\n11\n3\n5\n1\n\n\nJournalism\nNA\nNA\n1\nNA\n\n\nMexican American Studies\nNA\nNA\n1\nNA\n\n\nSocial & Behavioral Sci Admin\nNA\nNA\n1\nNA\n\n\n\n\n\nThis table shows that most High DEW percentage courses are occurring in Fully Online courses. However, In Person courses in the departments of Philosophy and the School of Geography,Developmental, and Environmental Studies also showed comparable number of High DEW percentage courses to Fully Online courses. While the School of Anthropology saw their highest DEW percentage courses for the Live Online mode."
  },
  {
    "objectID": "Anomaly_Detection.html#introduction",
    "href": "Anomaly_Detection.html#introduction",
    "title": "Anomaly Detection",
    "section": "",
    "text": "In order to identify patterns or trends in the Grade Outcomes, we wanted to better understand the current anomalies in the data. We focused on trying to identify outliers that had a high value of poor grade outcomes. We decided to base this anomaly detection on the percentage of D, E, or W grades for a course. This decision was made so that high enrollment courses, such as English 101 with enrollment over 3500, would not further skew the data. We began by examining the quartiles for the D.E.W. Percentage.\n\n\nQuartiles for DEW Percents\nsummary(anomaly_data$Percent.DEW)\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    4.00   10.25   12.55   18.20   85.70 \n\n\nHere we verify that mean value is the 12.55% as we found in the initial EDA. We also see where the cut off values are for the quartiles. The first quartile or bottom 25% of the data are DEW percent values of less than 4%. The second quartile contains the DEW percents that range from 4% to 10.25%. The third quartile ranges from 10.25% to 18.2%. And the final quartile is all DEW percents of greater than 18.2%. This Histogram shows the distribution of these quartiles."
  },
  {
    "objectID": "Anomaly_Detection.html#histograms-of-dew-percentages",
    "href": "Anomaly_Detection.html#histograms-of-dew-percentages",
    "title": "Anomaly Detection",
    "section": "",
    "text": "Histogram of DEW Percentage\ng1 &lt;- ggplot(anomaly_data, aes(x = Percent.DEW)) +\n  geom_histogram(binwidth = 3, fill = \"blue\", color = \"black\", alpha = 0.8) +\n  labs(title = \"Histogram of DEW Percent\", x = \"Percent DEW\", y = \"Frequency\")\n\nggsave(\"images/g1.png\", plot=g1)\ng1\n\n\n\n\n\nIn the percentages of DEW for courses, we anticipated to see the data to be skewed to left as 75% of the data has a DEW percent is below 18.2%. This is clearly displayed in the above histogram. In the Histogram below we include only the top quartile of DEW percentages. This histogram allows us to more clearly see the frequency of DEW percentages over 30%.\n\n\nHistogram of Only Top 25% of DEW\n# create new df of the top quartile\nanomaly_25 &lt;- anomaly_data %&gt;% \n  filter(Percent.DEW&gt;19)\n\nggplot(anomaly_25, aes(x = Percent.DEW)) +\n  geom_histogram(binwidth = 2, fill = \"blue\", color = \"black\", alpha = 0.8) +\n  labs(title = \"Histogram of Only Top 25% of DEW Percent\", x = \"Percent DEW\", y = \"Frequency\")"
  },
  {
    "objectID": "Anomaly_Detection.html#box-plots-of-dew-percentages",
    "href": "Anomaly_Detection.html#box-plots-of-dew-percentages",
    "title": "Anomaly Detection",
    "section": "",
    "text": "The next step we took was to create box and whisker plots. The first plot seen below shows that the top 5 colleges DEW percentage. We can clearly see outliers for all colleges with the most outliers occurring in the College of Social and Behavioral Sciences.\n\n\nBox Plot of DEW Percent\nad1 &lt;- ggplot(anomaly_data, aes(y = College, x = Percent.DEW)) +\n  geom_boxplot(fill = \"lightblue\", color = \"black\") +\n  labs(title = \"Boxplot of Percent DEW\",  x = \"Percent DEW\", y=\"\")\nggsave(\"images/ad1.png\", plot=ad1)\n\n\nSaving 7 x 5 in image\n\n\nBox Plot of DEW Percent\nad1\n\n\n\n\n\nThe next plot shows how DEW Percentage for each mode for courses. The outliers seem to be evenly distributed across the types of different modes for courses and not isolated to a specific mode.\n\n\nBox Plot of DEW Percent by Term\nggplot(anomaly_data, aes(y = Mode, x = Percent.DEW)) +\n  geom_boxplot(fill = \"lightblue\", color = \"black\") +\n  labs(title = \"Boxplot of Percent DEW by Term\",  x = \"Percent DEW\", y=\"\")+\n    facet_wrap(~TERM_LD, ncol=2)\n\n\n\n\n\nWe confirmed this distribution by the below box and whisker plot that shows the mode by College. Once again the outliers are not isolated to a certain mode but fairly evenly distributed across the modes in all colleges.\n\n\nBox Plot of DEW Percent by College\nggplot(anomaly_data, aes(y = Mode, x = Percent.DEW)) +\n  geom_boxplot(fill = \"lightblue\", color = \"black\") +\n  labs(title = \"Boxplot of Percent DEW by College\",  x = \"Percent DEW\", y=\"\")+\n  facet_wrap(~College, ncol=3)"
  },
  {
    "objectID": "Anomaly_Detection.html#tables-of-high-dew-percent-courses",
    "href": "Anomaly_Detection.html#tables-of-high-dew-percent-courses",
    "title": "Anomaly Detection",
    "section": "",
    "text": "After completing these bow plots, we decided to add a classification column that labeled any DEW percentage over 30% as High and all other percentages as Low. We determined this 30% cut off by using the box plots from above that showed outliers in all colleges and modes occurred above the 30% threshold. This creates a new data set with 528 observations. This mean that about 8% of courses from the original data are being considered for further analysis.\n\n\nCreate Classification\n# create column to label high dew percentage courses\nanomaly_data &lt;- anomaly_data %&gt;% \n  mutate(DEW_Class = case_when(\n    Percent.DEW &lt; 30 ~ 0,\n    Percent.DEW &gt;= 30 ~ 1\n  ))\n\n\n\n\nTable and Box Plot of High DEW Percentage Courses\nhigh_risk &lt;- anomaly_data %&gt;% \n  filter(DEW_Class &gt; 0)\n\nggplot(high_risk, aes(y = College, x = Percent.DEW)) +\n  geom_boxplot(fill = \"lightblue\", color = \"black\") +\n  labs(title = \"Boxplot of Percent DEW\",  x = \"Percent DEW\", y=\"\")\n\n\n\n\n\nTable and Box Plot of High DEW Percentage Courses\nhigh_total &lt;- aggregate(DEW_Class~College + TERM_LD, data=high_risk, sum)\nhigh_total &lt;- high_total %&gt;% pivot_wider(names_from = TERM_LD, values_from = DEW_Class)\nkable(high_total, caption =  \"Total High Risk Courses for Each College per Semester\")\n\n\n\nTotal High Risk Courses for Each College per Semester\n\n\n\n\n\n\n\n\n\nCollege\nFall 2019\nFall 2020\nSpring 2020\nSpring 2021\n\n\n\n\nCollege of Agric and Life Sci\n6\n12\n4\n6\n\n\nCollege of Humanities\n25\n27\n23\n45\n\n\nCollege of Science\n32\n49\n11\n54\n\n\nCollege of Social & Behav Sci\n46\n53\n48\n66\n\n\nEller College of Management\n11\n5\nNA\n5\n\n\n\n\n\nThis table shows that the most outliers defined as courses over 30% DEW percentage occurred in the College of Social and Behavioral Science. We can also see that the this college had the highest mean value in mean value in the data. The number of courses for this college and the College of Humanities stayed reasonable steady during the pandemic. However, we saw decreases in outliers for the rest of the colleges during the first semester of the pandemic followed by an increase to above pre-pandemic levels in the second semester. Most notably the College of Science dropped to just 11 High DEW percentage courses in the Spring of 2020 but spiked to 49 in the next semester. After reviewing this table, we decided to isolate the College of Social and Behavioral Sciences since the most occurrence of High DEW percentage courses. The below table shows the distribution of these courses in each department within this college.\n\n\nTable of High Risk Courses For College of Social and Behavioral Sciences by Department and Term\nhigh_soc &lt;- high_risk %&gt;% filter(College == \"College of Social & Behav Sci\")\nhigh_total &lt;- aggregate(DEW_Class~Department + TERM_LD, data=high_soc, sum)\nhigh_total &lt;- high_total %&gt;% pivot_wider(names_from = TERM_LD, values_from = DEW_Class)\nkable(high_total, caption =  \"Total High Risk Course for College of Social and Behavioral Sciences per Semester\")\n\n\n\nTotal High Risk Course for College of Social and Behavioral Sciences per Semester\n\n\n\n\n\n\n\n\n\nDepartment\nFall 2019\nFall 2020\nSpring 2020\nSpring 2021\n\n\n\n\nAZ Center for Judaic Studies\n2\nNA\n2\n3\n\n\nCommunication\n1\n1\nNA\nNA\n\n\nEnglish\n3\n1\n3\n6\n\n\nGender and Womens Studies\n1\n1\nNA\n2\n\n\nHistory\n8\n10\n15\n12\n\n\nLinguistics\n3\n7\n2\n6\n\n\nMexican American Studies\n1\nNA\nNA\nNA\n\n\nPhilosophy\n5\n9\n8\n6\n\n\nSch Geography, Dev & Environ\n7\n6\n6\n5\n\n\nSchool of Anthropology\n1\n7\n2\n6\n\n\nSchool of Govt & Public Policy\n1\n1\n1\n1\n\n\nSchool of Information\n6\n4\n4\n6\n\n\nSocial & Behavioral Sci Admin\n1\nNA\nNA\nNA\n\n\nSociology\n6\n4\n3\n7\n\n\nLatin American Area Center\nNA\n2\n1\n2\n\n\nJournalism\nNA\nNA\n1\nNA\n\n\nSch Middle E/N African Studies\nNA\nNA\nNA\n4\n\n\n\n\n\nThis table shows that the departments of History and Philosophy consistently have the most numbers of High DEW percentage courses across the four semesters being analyzed.\n\n\nTable of High Risk Courses For College of Social and Behavioral Sciences by Department and Mode\nhigh_soc &lt;- high_risk %&gt;% filter(College == \"College of Social & Behav Sci\")\nhigh_total &lt;- aggregate(DEW_Class~Department + Mode, data=high_soc, sum)\nhigh_total &lt;- high_total %&gt;% pivot_wider(names_from = Mode, values_from = DEW_Class)\nkable(high_total, caption =  \"Total High Risk Course for College of Social and Behavioral Sciences per Semester\")\n\n\n\nTotal High Risk Course for College of Social and Behavioral Sciences per Semester\n\n\n\n\n\n\n\n\n\nDepartment\nFullOnline\nHybrid\nIn Person\nLive Onln\n\n\n\n\nAZ Center for Judaic Studies\n5\n1\n1\nNA\n\n\nCommunication\n1\nNA\n1\nNA\n\n\nEnglish\n9\nNA\n2\n2\n\n\nGender and Womens Studies\n4\nNA\nNA\nNA\n\n\nHistory\n33\n2\n7\n3\n\n\nLatin American Area Center\n4\n1\nNA\nNA\n\n\nLinguistics\n12\nNA\n2\n4\n\n\nPhilosophy\n12\n2\n10\n4\n\n\nSch Geography, Dev & Environ\n7\n3\n9\n5\n\n\nSch Middle E/N African Studies\n2\nNA\nNA\n2\n\n\nSchool of Anthropology\n5\n1\n2\n8\n\n\nSchool of Govt & Public Policy\n1\n1\n1\n1\n\n\nSchool of Information\n10\nNA\n6\n4\n\n\nSociology\n11\n3\n5\n1\n\n\nJournalism\nNA\nNA\n1\nNA\n\n\nMexican American Studies\nNA\nNA\n1\nNA\n\n\nSocial & Behavioral Sci Admin\nNA\nNA\n1\nNA\n\n\n\n\n\nThis table shows that most High DEW percentage courses are occurring in Fully Online courses. However, In Person courses in the departments of Philosophy and the School of Geography,Developmental, and Environmental Studies also showed comparable number of High DEW percentage courses to Fully Online courses. While the School of Anthropology saw their highest DEW percentage courses for the Live Online mode."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Descriptive analysis of grade outcomes",
    "section": "",
    "text": "This project was developed by [The Null Wranglers] For INFO 523 - Data Mining and Discovery at the University of Arizona, taught by Dr. Greg Chism. The team is comprised of the following team members.\n\nKrist Manasil : PhD in Infromation, First Year\nDong Chen : PhD in Higher Education , Second Year\nUtkarsha Patil : MS in Data Science, First Year\nAnajni Sowmya Bollapragada : MS in Data Science, First Year\nRohit Hemaraja : MS in Data Science, First Year"
  },
  {
    "objectID": "Decision_Tree.html",
    "href": "Decision_Tree.html",
    "title": "Decision_Tree",
    "section": "",
    "text": "Load Libraries\nsuppressWarnings(library(tidyverse))\nlibrary(knitr)\nlibrary(lubridate)\nlibrary(ggplot2)\nlibrary(dplyr)\n\n\n\nlibrary(rpart)\nlibrary(rpart.plot)\n\ndata &lt;- read.csv(\"data/study_data.csv\")\n\nfiltered_data1 &lt;- data %&gt;% filter(Sections &lt;= 1)\n\n\n# Change values in the \"DEW_COUNT\" column\n\nfiltered_data1$DEW_COUNT[filtered_data1$Percent.DEW &lt;= 12.2] &lt;- 'Low'\n\nfiltered_data1$DEW_COUNT[filtered_data1$Percent.DEW &gt; 12.2] &lt;- 'High'\n\n\nfiltered_data1$DEW_COUNT &lt;- as.factor(filtered_data1$DEW_COUNT)\n\n\ntree_data &lt;- select(filtered_data1, DEW_COUNT, Full_Online, Hybrid, Live_Online, Reg_Session, Monday,         Tuesday, Wednesday, Thursday, Friday, Saturday,              Sunday, Early_Morning, Mid_Morning, Early_Afternoon, Mid_Afternoon, Evening, Asynchronous  )\n\n\ncol_names &lt;- c(\"Full_Online\", \"Hybrid\", \"Live_Online\", \"Reg_Session\", \"Monday\",         \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\",              \"Sunday\", \"Early_Morning\", \"Mid_Morning\", \"Early_Afternoon\", \"Mid_Afternoon\", \"Evening\", \"Asynchronous\" )\n\n\ntree_data[col_names] &lt;- sapply(tree_data[col_names], as.logical)\n\n# Check for missing values in the dataset\n\nmissing_values &lt;- colSums(is.na(tree_data))\n\nsummary(tree_data)\n\n DEW_COUNT   Full_Online       Hybrid        Live_Online     Reg_Session    \n High:1525   Mode :logical   Mode :logical   Mode :logical   Mode :logical  \n Low :2403   FALSE:3126      FALSE:3479      FALSE:2948      FALSE:478      \n             TRUE :802       TRUE :449       TRUE :980       TRUE :3450     \n   Monday         Tuesday        Wednesday        Thursday      \n Mode :logical   Mode :logical   Mode :logical   Mode :logical  \n FALSE:2716      FALSE:2278      FALSE:2668      FALSE:2285     \n TRUE :1212      TRUE :1650      TRUE :1260      TRUE :1643     \n   Friday         Saturday         Sunday        Early_Morning  \n Mode :logical   Mode :logical   Mode :logical   Mode :logical  \n FALSE:3314      FALSE:3928      FALSE:3928      FALSE:3333     \n TRUE :614                                       TRUE :595      \n Mid_Morning     Early_Afternoon Mid_Afternoon    Evening       \n Mode :logical   Mode :logical   Mode :logical   Mode :logical  \n FALSE:3201      FALSE:3316      FALSE:3025      FALSE:3665     \n TRUE :727       TRUE :612       TRUE :903       TRUE :263      \n Asynchronous   \n Mode :logical  \n FALSE:3100     \n TRUE :828      \n\n# as_tibble(tree_data)\n\n# Assuming 'tree_data' is your dataset\nlibrary(rpart)\nlibrary(rpart.plot)\n\n# Build a decision tree with default settings using magrittr pipe\ntree_default &lt;- tree_data %&gt;%\n  rpart(DEW_COUNT ~ ., data = .)\n\n# Plot the decision tree using rpart.plot and save it as a PNG file\npng(\"images/decision_tree.png\", width = 1000, height = 600)\nrpart.plot(tree_default, box.palette = \"auto\", shadow.col = \"gray\", nn = TRUE, roundint = FALSE, cex = 1.5)\ndev.off()\n\npng \n  2 \n\n# Plot the decision tree with an increased size\nrpart.plot(tree_default, box.palette = \"auto\", shadow.col = \"gray\", nn = TRUE, roundint = FALSE, cex = 1.5)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Project title",
    "section": "",
    "text": "Add project abstract here."
  },
  {
    "objectID": "index.html#abstract",
    "href": "index.html#abstract",
    "title": "Project title",
    "section": "",
    "text": "Add project abstract here."
  },
  {
    "objectID": "proposal.html",
    "href": "proposal.html",
    "title": "Descriptive Analysis of Grade Outcomes",
    "section": "",
    "text": "Installed Packages\n# Load Libraries\nlibrary(knitr)\nif (!require(pacman))\n  install.packages(pacman)\n\npacman::p_load(tidyverse,   # Data wrangling\n               dlookr,      # Exploratory Data Analysis\n               formattable, # Present neat table format\n               gt,          # Alternating formatting for the tables\n               gtsummary)   # Summary for the tables"
  },
  {
    "objectID": "proposal.html#introduction",
    "href": "proposal.html#introduction",
    "title": "Descriptive Analysis of Grade Outcomes",
    "section": "Introduction",
    "text": "Introduction\nLow student success rates have a profound impact on an educational institution’s academic offerings, their ability to provide financial support and scholarships, as well as their overall professional reputation. Much is unknown about how the corona-virus pandemic has impacted student success in higher education. Thus, in order to better understand this impact, this study seeks to conduct a detailed examination of the grade value outcomes during this time. By examining the grade value outcomes for the years before, during and after the pandemic, patterns and trends may be discovered that might help guide student support services in the future. The analysis will breakdown the grade values outcomes by college, department, division level and course level using clustering and classification techniques. Anomalies will be isolated for a more fine grained inspection that includes course attributes. These course attributes will be used in an effort to create a model for predictive grade value outcomes."
  },
  {
    "objectID": "proposal.html#goals",
    "href": "proposal.html#goals",
    "title": "Descriptive Analysis of Grade Outcomes",
    "section": "Goals",
    "text": "Goals\nThe high-level goal of this study is to analyze and understand the grade outcomes at the University of Arizona (UofA) pre-, during, and after the COVID-19 pandemic. This investigation revolves around two primary questions:\n\nPattern Analysis – What if any patterns or relationships exist between colleges, departments, or course level and grade outcomes for enrolled students?\nPredictive Modeling – Can a predictive model be developed that accurately forecasts grade outcomes based on course attributes?"
  },
  {
    "objectID": "proposal.html#dataset",
    "href": "proposal.html#dataset",
    "title": "Descriptive Analysis of Grade Outcomes",
    "section": "Dataset",
    "text": "Dataset\nThe first data set used for this analysis, is known as the DEW Rates, contains information about the breakdown of grade value outcomes during the academic years of 2018-19, 2019-20, and 2020-21 at the University of Arizona. The consists of 35697 observations of courses with 23 variables related to enrollment and grade values. Below is a description of the data:\n\nGrade Outcomes Data\n\n\n\n\n\n\nVariable\nDescription\n\n\n\n\nCollege\nIdentifies the college at the University of Arizona\n\n\nDepartment\nIdentifies which department within given college\n\n\nSubject.Code\nIdentifies the subject of the course with a 3 or 4 letter code\n\n\nCatalog.Number\nIdentifies the catalog number of the course\n\n\nCourse.Description\nIdentifies the title or the course\n\n\nCourse.Level\nIdentifies if the course is lower, upper or graduate division\n\n\nTotal.Student.Count\nThe total enrollment for the course\n\n\nD_GRADE_COUNT\nThe number of enrolled students that earned a D grade in the course\n\n\nFAIL_GRADE_COUNT\nThe number of enrolled students that earned a E(Fail) grade in the course\n\n\nWITHDRAW_GRADE_COUNT\nThe number of enrolled students that withdrew from the course\n\n\nDEW_COUNT\nThe total of D, E, and W grades earned by enrolled students in the course\n\n\nPASS_GRADE_COUNT\nThe number of enrolled students that received a C or greater grade value\n\n\nWITHDRAW_FULLMED_GRADE_COUNT\nThe number of enrolled students that took a full medical withdrawal\n\n\nINCOMPLETE_UNGRADED_COUNT\nThe number of enrolled students that did not receive grades\n\n\nTERM_LD\nThe semester that the course was offered\n\n\nACAD_YR_SID\nThe academic year that the course was offered\n\n\nPercent.D.Grade\nThe percentage of enrolled students that received a D grade in the course\n\n\nPercent.E.Grade\nThe percentage of enrolled students that received a E grade in the course\n\n\nPercent.W.Grade\nThe percentage of enrolled students that received a W grade in the course\n\n\nPercent.DEW\nThe percentage of enrolled students that received a D, E, or W grade in the courseThe percentage of enrolled students that received a D, E, or W grade in the course\n\n\nPercent.Passed\nThe percentage of enrolled students that received a C or greater grade value in the course\n\n\nPer.Full..Medical.Withdrawal\nThe percentage of enrolled students that had a full medical withdraw in the course\n\n\nPer.Ungraded..Incomplete\nThe percentage of enrolled students that did not receive a grade value in the course\n\n\n\n\n\nLoad Data 1\n# read in data\ndew_counts &lt;- read.csv(\"data/DEW Rates.csv\")\n\nkable(head(dew_counts))\n\n\n\n\n\nCollege\nDepartment\nSubject.Code\nCatalog.Number\nCourse.Description\nCourse.Level\nTotal.Student.Count\nD_GRADE_COUNT\nFAIL_GRADE_COUNT\nWITHDRAW_GRADE_COUNT\nDEW_COUNT\nPASS_GRADE_COUNT\nWITHDRAW_FULLMED_GRADE_COUNT\nINCOMPLETE_UNGRADED_COUNT\nTERM_LD\nACAD_YR_SID\nPercent.D.Grade\nPercent.E.Grade\nPercent.W.Grade\nPercent.DEW\nPercent.Passed\nPer.Full..Medical.Withdrawal\nPer.Ungraded..Incomplete\n\n\n\n\nCollege of Engineering\nAerospace & Mechanical Engr\nABE\n489A\nFab Tech Micro+Nanodevic\nUpper Division\n10\n0\n0\n0\n0\n10\n0\n0\nFall 2018\n2019\n0.0\n0.0\n0.0\n0.0\n100.0\n0.0\n0\n\n\nCollege of Engineering\nAerospace & Mechanical Engr\nAME\n105\nIntroduction to MATLAB I\nLower Division\n196\n17\n2\n1\n20\n173\n3\n0\nFall 2018\n2019\n8.7\n1.0\n0.5\n10.2\n88.3\n1.5\n0\n\n\nCollege of Engineering\nAerospace & Mechanical Engr\nAME\n105\nIntroduction to MATLAB I\nLower Division\n160\n22\n17\n3\n42\n115\n3\n0\nFall 2019\n2020\n13.8\n10.6\n1.9\n26.3\n71.9\n1.9\n0\n\n\nCollege of Engineering\nAerospace & Mechanical Engr\nAME\n105\nIntroduction to MATLAB I\nLower Division\n111\n11\n4\n5\n20\n82\n9\n0\nFall 2020\n2021\n9.9\n3.6\n4.5\n18.0\n73.9\n8.1\n0\n\n\nCollege of Engineering\nAerospace & Mechanical Engr\nAME\n105\nIntroduction to MATLAB I\nLower Division\n254\n11\n5\n6\n22\n231\n1\n0\nSpring 2019\n2019\n4.3\n2.0\n2.4\n8.7\n90.9\n0.4\n0\n\n\nCollege of Engineering\nAerospace & Mechanical Engr\nAME\n105\nIntroduction to MATLAB I\nLower Division\n213\n3\n9\n19\n31\n182\n0\n0\nSpring 2020\n2020\n1.4\n4.2\n8.9\n14.6\n85.4\n0.0\n0\n\n\n\n\n\n\n\nThe second data set used for this analysis, is known as the SY20 and SY21, contains information about course attributes for the academic years of 2019-20, and 2020-21 at the University of Arizona. Unfortunately the academic year of 2018-19 was unable to obtained for this study. There are over 260,000 observations of courses with 27 variable per observation.\n\nCourse Schedule Overview\n\n\n\n\n\n\nVariable\nDescription\n\n\n\n\nTerm\nThe term the course was offered\n\n\nCampus\nThe campus the course was offered at\n\n\nSession\nThe type of session for the course - regular, first 7 weeks, etc,\n\n\nSubject\nThe 3 or 4 letter subject code of the course\n\n\nCat . .\nThe course catalog code\n\n\nSection\nThe section number of the course\n\n\nClass . .\nThe class identifier code\n\n\nStart.Date\nThe start date of the course\n\n\nEnd.Date\nThe end of the course\n\n\nMeet . .\nThe number of meetings for each course\n\n\nReq.Desig\nA course type identifier\n\n\nP.F. Opt\nA flag that indicates if the course was a P or F option\n\n\nComponent\nCategory/Type of course\n\n\nUnits\nThe number of units of the course\n\n\nMin.Units\nThe minimum number of units allowed for the course\n\n\nMax.Units\nThe maximum number of units allowed for the course\n\n\nCourse\nThe name of the course\n\n\nCombined.Section\nIdentifier if the course is combined with another course\n\n\nMeeting.Days\nThe list of days the courses meets on\n\n\nStart\nThe start time of day that the course meets\n\n\nEnd\nThe end time of day that the course meets\n\n\nFacility\nThe location or room of the course meetings\n\n\nTotal.Enroll\nThe total number of students enrolled\n\n\nMax.Enroll\nThe maximum number of students allowed to enrolled\n\n\nRm.Cap\nThe maximum number of students allowed in the meeting space\n\n\nEnrollment.Status\nIdentifier if the course was an open or closed enrollment\n\n\nMode\nThe modelity of the course\n\n\n\n\n\nLoad Data 2\n# read in two csv files\nsy20_data &lt;- read.csv(\"data/Course Schedule Overview - SY20.csv\")\n\nkable(head(sy20_data))\n\n\n\n\n\nTerm\nCampus\nSession\nSubject\nCat..\nSection\nClass..\nStart.Date\nEnd.Date\nMeet..\nReq.Desig\nP.F.Opt\nComponent\nUnits\nMin.Units\nMax.Units\nCourse\nCombined.Section\nMeeting.Days\nStart\nEnd\nFacility\nTotal.Enroll\nMax.Enroll\nRm.Cap\nEnrollment.Status\nMode\n\n\n\n\nFall 2019\nMAIN\nRegular Academic Session\nABS\n593A\n1\n45315\n8/26/2019\n12/11/2019\n1\n-\n\nInd Study\n1\n1\n9\nInternship in Applied Biosci\n-\n\n12:00 AM\n12:00 AM\nNA\n0\n0\n0\nClosed\nIn Person\n\n\nFall 2019\nMAIN\nRegular Academic Session\nABS\n593A\n2\n45394\n8/26/2019\n12/11/2019\n1\n-\n\nInd Study\n1\n1\n9\nInternship in Applied Biosci\n-\n\n12:00 AM\n12:00 AM\nNA\n1\n5\n0\nOpen\nIn Person\n\n\nFall 2019\nMAIN\nRegular Academic Session\nABS\n593A\n3\n45395\n8/26/2019\n12/11/2019\n1\n-\n\nInd Study\n1\n1\n9\nInternship in Applied Biosci\n-\n\n12:00 AM\n12:00 AM\nNA\n0\n5\n0\nOpen\nIn Person\n\n\nFall 2019\nMAIN\nRegular Academic Session\nABS\n593A\n4\n45397\n8/26/2019\n12/11/2019\n1\n-\n\nInd Study\n1\n1\n9\nInternship in Applied Biosci\n-\n\n12:00 AM\n12:00 AM\nNA\n1\n5\n0\nOpen\nIn Person\n\n\nFall 2019\nMAIN\nRegular Academic Session\nABS\n593A\n5\n45398\n8/26/2019\n12/11/2019\n1\n-\n\nInd Study\n1\n1\n9\nInternship in Applied Biosci\n-\n\n12:00 AM\n12:00 AM\nNA\n0\n5\n0\nOpen\nIn Person\n\n\nFall 2019\nMAIN\nRegular Academic Session\nABS\n593A\n6\n47657\n8/26/2019\n12/11/2019\n1\n-\n\nInd Study\n1\n1\n9\nInternship in Applied Biosci\n-\n\n12:00 AM\n12:00 AM\nNA\n0\n5\n0\nOpen\nIn Person"
  },
  {
    "objectID": "proposal.html#exploratory-question",
    "href": "proposal.html#exploratory-question",
    "title": "Descriptive Analysis of Grade Outcomes",
    "section": "Exploratory Question",
    "text": "Exploratory Question\nWhat patterns and variations exist in grade value outcomes across colleges, departments, and course levels during and after the COVID-19 pandemic?"
  },
  {
    "objectID": "proposal.html#predictive-question",
    "href": "proposal.html#predictive-question",
    "title": "Descriptive Analysis of Grade Outcomes",
    "section": "Predictive Question",
    "text": "Predictive Question\nHow can course attributes associated with poor grade outcomes during this time pandemic predict future grade values for similar courses?"
  },
  {
    "objectID": "proposal.html#analysis-plan",
    "href": "proposal.html#analysis-plan",
    "title": "Descriptive Analysis of Grade Outcomes",
    "section": "Analysis plan",
    "text": "Analysis plan\nData Collection\n\nHistorical Grade Data: Collect historical grade data from the University of Arizona for the years before, during, and after the COVID-19 pandemic. This data should include information on grade value outcomes for courses by semester.\nCourse Attributes Data: Gather data on course attributes such as class size, instructional format (online, hybrid, in-person), faculty information, time and day of the class offering, and any other relevant features that might influence grade outcomes.\n\nExploratory Data Analysis (EDA)\n\nDescriptive Statistics: Calculate summary statistics for overall grade distributions, college-wise, department-wise, and course-level. Examine mean, median,sums, and any potential outliers.\n\nPattern Analysis\n\nClustering: Utilize clustering techniques to group colleges, departments, and courses based on similar grade outcomes. Evaluate if specific clusters show distinct patterns during the pandemic.\nClassification: Apply classification algorithms to identify factors influencing grade outcomes. Investigate if colleges, departments, or specific course attributes significantly contribute to predicting grade results.\nAnomaly Detection: Identify anomalies in grade distributions, focusing on courses or departments that experienced unexpected changes during the pandemic. Conduct a fine-grained inspection of these anomalies.\nTime Series Decomposition: Decompose the time series data to identify trends, seasonality, and residual components. Analyze if any irregularities in the residual component coincide with the pandemic period.\n\nPredictive Modeling\n\nFeature Selection: Select relevant course attributes for predictive modeling. Use domain knowledge and statistical methods to choose features that significantly impact grade outcomes.\nModel Development: Build predictive models using machine learning algorithms such as regression or classification. Split the data into training and testing sets to evaluate model performance.\n\nDecision Tree Analysis: Employ decision tree analysis to understand the hierarchy of factors influencing grade outcomes.\nRegression: Utilize regression for predictive model\n\nModel Evaluation: Assess the accuracy, precision, recall, and F1-score of the developed models. Compare models’ performance across different colleges, departments, and course levels.\nInterpretation: Interpret the results of the predictive models to understand the key factors influencing grade outcomes. Provide insights into how colleges, departments, and course attributes contribute to student success.\n\nReporting\n\nPrepare a comprehensive report summarizing the methodology, findings, recommendations and potential future research. This report will include visualizations such as charts and graphs to enhance the presentation of results. Clearly communicate the findings of the study in an effort to student support services and academic planning at the University of Arizona."
  },
  {
    "objectID": "proposal.html#weekly-work-plan-and-responsibilities",
    "href": "proposal.html#weekly-work-plan-and-responsibilities",
    "title": "Descriptive Analysis of Grade Outcomes",
    "section": "Weekly Work Plan and Responsibilities",
    "text": "Weekly Work Plan and Responsibilities\nWeek 1 Nov 12th - Nov 18th\n\nFinalize proposal - group\nClean data - Group\nExploratory Data Analysis\n\nGrade Value Outcomes - Kristi, Rohit\nCourse Attributes - Dong, Anjani, Utkarsha\n\nClustering and Classification - Group\n\nWeek 2 Nov 19th - Nov 25th\n\nAnomaly Detection - Rohit, Kristi\nTime Series Analysis - Anjani, Utkarsha, Dong\n\nWeek 3 Nov 26th - Dec 2nd\n\nDecision Tree Analysis - Group\nRegression Predictive Model - Group \nRough Draft of Write-Up - Dong and Kristi\nRough Draft of Abstract - Dong and Kristi\nRough Draft of Presentation - Rohit, Anjani, Utkarsha\n\nWeek 4 Dec 3rd - Dec 11th\n\nFinalize Write-Up - Group\nFinalize Abstract - Group\nFinalize Presentation - Group\nDeliver Final Project Materials and Presentation - Group"
  },
  {
    "objectID": "proposal.html#repo-organization",
    "href": "proposal.html#repo-organization",
    "title": "Descriptive Analysis of Grade Outcomes",
    "section": "Repo Organization",
    "text": "Repo Organization\nThe following are the folders involved in the Project repository.\n\ndata/\nUsed for storing any necessary data files for the project, such as input files.\n\n\nimages/\nUsed for storing image files used in the project.\n\n\nextra/\nUsed to brainstorm our analysis which won’t impact our project workflow.\n\n\nfreeze/\nThis folder is used to store the generated files during the build process. These files represent the frozen state of the website at a specific point in time.\n\n\ngithub/\nFolder for storing github templates and workflow.\n\n\n.git\nhidden directory at the root of the repository that contains the internal data structure and configuration files\n\n\nabout.qmd\ncontains information about Project title and team members.\n\n\npresentation.qmd\ncontains the presentation for final project\n\n\nproposal.qmd\ncontains the proposal for the final project\n\n\nindex.qmd\nContains the abstract for the project.\n\n\npresentation.qmd\nincludes information about the presentations of the project"
  },
  {
    "objectID": "study_data_EDA.html",
    "href": "study_data_EDA.html",
    "title": "Project Title",
    "section": "",
    "text": "suppressWarnings(library(tidyverse))\nlibrary(knitr)\nlibrary(lubridate)\nlibrary(ggplot2)"
  },
  {
    "objectID": "study_data_EDA.html#dataset-setup",
    "href": "study_data_EDA.html#dataset-setup",
    "title": "Project Title",
    "section": "Dataset Setup",
    "text": "Dataset Setup\n\n\nLoad data\n# read in data\nstudy_data &lt;- read.csv(\"data/study_data.csv\")\nsummary(study_data)\n\n\n       X        Course.Identifier    College           Department       \n Min.   :   1   Length:6568        Length:6568        Length:6568       \n 1st Qu.:1643   Class :character   Class :character   Class :character  \n Median :3284   Mode  :character   Mode  :character   Mode  :character  \n Mean   :3284                                                           \n 3rd Qu.:4926                                                           \n Max.   :6568                                                           \n    Merged          Subject.Code       Catalog.Number     Course.Description\n Length:6568        Length:6568        Length:6568        Length:6568       \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n Course.Level       Total.Student.Count D_GRADE_COUNT     FAIL_GRADE_COUNT \n Length:6568        Min.   :   6.0      Min.   :  0.000   Min.   :  0.000  \n Class :character   1st Qu.:  19.0      1st Qu.:  0.000   1st Qu.:  0.000  \n Mode  :character   Median :  40.0      Median :  1.000   Median :  1.000  \n                    Mean   : 114.9      Mean   :  4.228   Mean   :  7.034  \n                    3rd Qu.:  96.0      3rd Qu.:  3.000   3rd Qu.:  5.000  \n                    Max.   :4790.0      Max.   :235.000   Max.   :409.000  \n WITHDRAW_GRADE_COUNT   DEW_COUNT      PASS_GRADE_COUNT \n Min.   :  0.000      Min.   :  0.00   Min.   :   1.00  \n 1st Qu.:  0.000      1st Qu.:  1.00   1st Qu.:  17.00  \n Median :  1.000      Median :  4.00   Median :  35.00  \n Mean   :  5.218      Mean   : 16.48   Mean   :  96.33  \n 3rd Qu.:  4.000      3rd Qu.: 11.25   3rd Qu.:  82.00  \n Max.   :258.000      Max.   :758.00   Max.   :4344.00  \n WITHDRAW_FULLMED_GRADE_COUNT INCOMPLETE_UNGRADED_COUNT   TERM_LD         \n Min.   :  0.000              Min.   : 0.00000          Length:6568       \n 1st Qu.:  0.000              1st Qu.: 0.00000          Class :character  \n Median :  0.000              Median : 0.00000          Mode  :character  \n Mean   :  2.026              Mean   : 0.05085                            \n 3rd Qu.:  2.000              3rd Qu.: 0.00000                            \n Max.   :143.000              Max.   :18.00000                            \n  ACAD_YR_SID   Percent.D.Grade  Percent.E.Grade  Percent.W.Grade\n Min.   :2020   Min.   : 0.000   Min.   : 0.000   Min.   : 0.00  \n 1st Qu.:2020   1st Qu.: 0.000   1st Qu.: 0.000   1st Qu.: 0.00  \n Median :2021   Median : 1.000   Median : 3.400   Median : 2.80  \n Mean   :2021   Mean   : 2.822   Mean   : 5.089   Mean   : 4.64  \n 3rd Qu.:2021   3rd Qu.: 4.300   3rd Qu.: 7.925   3rd Qu.: 6.70  \n Max.   :2021   Max.   :55.600   Max.   :71.400   Max.   :63.60  \n  Percent.DEW    Percent.Passed   Per.Full..Medical.Withdrawal\n Min.   : 0.00   Min.   : 14.30   Min.   : 0.000              \n 1st Qu.: 4.00   1st Qu.: 79.28   1st Qu.: 0.000              \n Median :10.25   Median : 88.00   Median : 0.000              \n Mean   :12.55   Mean   : 85.72   Mean   : 1.609              \n 3rd Qu.:18.20   3rd Qu.: 94.70   3rd Qu.: 2.400              \n Max.   :85.70   Max.   :100.00   Max.   :33.300              \n Per.Ungraded..Incomplete   P.F.Opt              Units       \n Min.   : 0.0000          Length:6568        Min.   : 1.000  \n 1st Qu.: 0.0000          Class :character   1st Qu.: 3.000  \n Median : 0.0000          Mode  :character   Median : 3.000  \n Mean   : 0.1221                             Mean   : 2.948  \n 3rd Qu.: 0.0000                             3rd Qu.: 3.000  \n Max.   :28.6000                             Max.   :15.000  \n     Mode              Class..            Sections        Total.Enroll    \n Length:6568        Min.   :   25007   Min.   :  1.000   Min.   :   6.00  \n Class :character   1st Qu.:   64734   1st Qu.:  1.000   1st Qu.:  17.00  \n Mode  :character   Median :   88764   Median :  1.000   Median :  34.00  \n                    Mean   :  154154   Mean   :  2.336   Mean   :  78.38  \n                    3rd Qu.:  154164   3rd Qu.:  2.000   3rd Qu.:  70.00  \n                    Max.   :14906565   Max.   :227.000   Max.   :4434.00  \n   Max.Enroll         Rm.Cap         Early_Morning      Mid_Morning     \n Min.   :   0.0   Min.   :    0.00   Min.   : 0.0000   Min.   : 0.0000  \n 1st Qu.:  30.0   1st Qu.:    1.00   1st Qu.: 0.0000   1st Qu.: 0.0000  \n Median :  51.0   Median :    2.00   Median : 0.0000   Median : 0.0000  \n Mean   : 101.9   Mean   :   65.15   Mean   : 0.3433   Mean   : 0.4269  \n 3rd Qu.: 100.0   3rd Qu.:   52.00   3rd Qu.: 0.0000   3rd Qu.: 0.0000  \n Max.   :4512.0   Max.   :14080.00   Max.   :51.0000   Max.   :62.0000  \n Early_Afternoon   Mid_Afternoon        Evening         Asynchronous    \n Min.   : 0.0000   Min.   : 0.0000   Min.   : 0.0000   Min.   : 0.0000  \n 1st Qu.: 0.0000   1st Qu.: 0.0000   1st Qu.: 0.0000   1st Qu.: 0.0000  \n Median : 0.0000   Median : 0.0000   Median : 0.0000   Median : 0.0000  \n Mean   : 0.3397   Mean   : 0.4217   Mean   : 0.1401   Mean   : 0.6647  \n 3rd Qu.: 0.0000   3rd Qu.: 1.0000   3rd Qu.: 0.0000   3rd Qu.: 1.0000  \n Max.   :56.0000   Max.   :56.0000   Max.   :19.0000   Max.   :55.0000  \n     Monday            Tuesday          Wednesday           Thursday      \n Min.   :  0.0000   Min.   : 0.0000   Min.   :  0.0000   Min.   : 0.0000  \n 1st Qu.:  0.0000   1st Qu.: 0.0000   1st Qu.:  0.0000   1st Qu.: 0.0000  \n Median :  0.0000   Median : 0.0000   Median :  0.0000   Median : 0.0000  \n Mean   :  0.6778   Mean   : 0.7339   Mean   :  0.7471   Mean   : 0.7228  \n 3rd Qu.:  1.0000   3rd Qu.: 1.0000   3rd Qu.:  1.0000   3rd Qu.: 1.0000  \n Max.   :152.0000   Max.   :75.0000   Max.   :152.0000   Max.   :75.0000  \n     Friday            Saturday     Sunday    Laboratory         Lecture       \n Min.   :  0.0000   Min.   :0   Min.   :0   Min.   :  0.000   Min.   :  0.000  \n 1st Qu.:  0.0000   1st Qu.:0   1st Qu.:0   1st Qu.:  0.000   1st Qu.:  1.000  \n Median :  0.0000   Median :0   Median :0   Median :  0.000   Median :  1.000  \n Mean   :  0.4504   Mean   :0   Mean   :0   Mean   :  0.312   Mean   :  1.727  \n 3rd Qu.:  0.0000   3rd Qu.:0   3rd Qu.:0   3rd Qu.:  0.000   3rd Qu.:  2.000  \n Max.   :134.0000   Max.   :0   Max.   :0   Max.   :110.000   Max.   :227.000  \n   Colloquim    Seminar           Workshop          Discussion      \n Min.   :0   Min.   :0.00000   Min.   : 0.00000   Min.   :  0.0000  \n 1st Qu.:0   1st Qu.:0.00000   1st Qu.: 0.00000   1st Qu.:  0.0000  \n Median :0   Median :0.00000   Median : 0.00000   Median :  0.0000  \n Mean   :0   Mean   :0.02512   Mean   : 0.04248   Mean   :  0.2023  \n 3rd Qu.:0   3rd Qu.:0.00000   3rd Qu.: 0.00000   3rd Qu.:  0.0000  \n Max.   :0   Max.   :6.00000   Max.   :30.00000   Max.   :146.0000  \n     Studio           Practicum          In_Person         Full_Online    \n Min.   :0.000000   Min.   :0.000000   Min.   :  0.0000   Min.   : 0.000  \n 1st Qu.:0.000000   1st Qu.:0.000000   1st Qu.:  0.0000   1st Qu.: 0.000  \n Median :0.000000   Median :0.000000   Median :  0.0000   Median : 0.000  \n Mean   :0.000609   Mean   :0.001066   Mean   :  0.9609   Mean   : 0.646  \n 3rd Qu.:0.000000   3rd Qu.:0.000000   3rd Qu.:  1.0000   3rd Qu.: 1.000  \n Max.   :3.000000   Max.   :2.000000   Max.   :227.0000   Max.   :55.000  \n   IntractTV     Hybrid          Live_Online        Reg_Session     \n Min.   :0   Min.   :  0.0000   Min.   :  0.0000   Min.   :  0.000  \n 1st Qu.:0   1st Qu.:  0.0000   1st Qu.:  0.0000   1st Qu.:  1.000  \n Median :0   Median :  0.0000   Median :  0.0000   Median :  1.000  \n Mean   :0   Mean   :  0.2401   Mean   :  0.4895   Mean   :  1.873  \n 3rd Qu.:0   3rd Qu.:  0.0000   3rd Qu.:  0.0000   3rd Qu.:  2.000  \n Max.   :0   Max.   :110.0000   Max.   :146.0000   Max.   :227.000  \n First_Half_Session Second_Half_Session First_Third_Session\n Min.   : 0.0000    Min.   : 0.0000     Min.   :0.000000   \n 1st Qu.: 0.0000    1st Qu.: 0.0000     1st Qu.:0.000000   \n Median : 0.0000    Median : 0.0000     Median :0.000000   \n Mean   : 0.1727    Mean   : 0.2358     Mean   :0.002132   \n 3rd Qu.: 0.0000    3rd Qu.: 0.0000     3rd Qu.:0.000000   \n Max.   :15.0000    Max.   :11.0000     Max.   :5.000000   \n Second_Third_Session Third_Third_Session    Ten_Week Thirteen_Week\n Min.   :0.000000     Min.   :0.000000    Min.   :0   Min.   :0    \n 1st Qu.:0.000000     1st Qu.:0.000000    1st Qu.:0   1st Qu.:0    \n Median :0.000000     Median :0.000000    Median :0   Median :0    \n Mean   :0.003197     Mean   :0.002132    Mean   :0   Mean   :0    \n 3rd Qu.:0.000000     3rd Qu.:0.000000    3rd Qu.:0   3rd Qu.:0    \n Max.   :5.000000     Max.   :6.000000    Max.   :0   Max.   :0    \n     Other          College_Number \n Min.   : 0.00000   Min.   :1.000  \n 1st Qu.: 0.00000   1st Qu.:2.000  \n Median : 0.00000   Median :4.000  \n Mean   : 0.04796   Mean   :3.354  \n 3rd Qu.: 0.00000   3rd Qu.:4.000  \n Max.   :29.00000   Max.   :5.000  \n\n\n\n\nLoad Libraries\n# How time affects classes (columns AH to AM) for different colleges? - Anjani\n\nlibrary(dplyr)\n\n# Create a table for each time slot\ntime_slots &lt;- c(\"Early_Morning\", \"Mid_Morning\", \"Early_Afternoon\", \"Mid_Afternoon\", \"Evening\", \"Asynchronous\")\n\ntables_list &lt;- lapply(time_slots, function(slot) {\n  table_data &lt;- study_data %&gt;%\n    group_by(College) %&gt;%\n    summarise(Mean_Classes_Attended = round(mean(get(slot), na.rm = TRUE), 2))\n  \n  names(table_data)[2] &lt;- paste(\"Mean_\", slot)\n  table_data\n})\n\n# Merge tables into a single table by College name\nmerged_table &lt;- Reduce(function(x, y) merge(x, y, by = \"College\", all = TRUE), tables_list)\n\n# Display the merged table\nkable(merged_table)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCollege\nMean_ Early_Morning\nMean_ Mid_Morning\nMean_ Early_Afternoon\nMean_ Mid_Afternoon\nMean_ Evening\nMean_ Asynchronous\n\n\n\n\nCollege of Agric and Life Sci\n0.22\n0.24\n0.26\n0.29\n0.05\n0.67\n\n\nCollege of Humanities\n0.22\n0.43\n0.32\n0.29\n0.08\n0.80\n\n\nCollege of Science\n0.64\n0.61\n0.45\n0.73\n0.40\n0.35\n\n\nCollege of Social & Behav Sci\n0.28\n0.43\n0.34\n0.37\n0.10\n0.85\n\n\nEller College of Management\n0.42\n0.35\n0.27\n0.46\n0.04\n0.26\n\n\n\n\n\n\n\nLoad Libraries\n# Total number of classes per week (AN to AT) in different colleges - Anjani\n\nlibrary(dplyr)\n\n# Create a table for each day of the week\nweekdays &lt;- c(\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\")\n\ntables_list &lt;- lapply(weekdays, function(day) {\n  table_data &lt;- study_data %&gt;%\n    group_by(College) %&gt;%\n    summarise(Mean_Classes_Attended = round(mean(get(day), na.rm = TRUE), 2))\n  \n  names(table_data)[2] &lt;- paste(\"Mean_Classes_\", day)\n  table_data\n})\n\n# Merge tables into a single table by College name\nmerged_table &lt;- Reduce(function(x, y) merge(x, y, by = \"College\", all = TRUE), tables_list)\n\n# Display the merged table\nkable(merged_table)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCollege\nMean_Classes_ Monday\nMean_Classes_ Tuesday\nMean_Classes_ Wednesday\nMean_Classes_ Thursday\nMean_Classes_ Friday\nMean_Classes_ Saturday\nMean_Classes_ Sunday\n\n\n\n\nCollege of Agric and Life Sci\n0.39\n0.46\n0.43\n0.46\n0.16\n0\n0\n\n\nCollege of Humanities\n0.84\n0.86\n0.85\n0.86\n0.38\n0\n0\n\n\nCollege of Science\n0.91\n1.13\n1.19\n1.09\n0.74\n0\n0\n\n\nCollege of Social & Behav Sci\n0.62\n0.61\n0.64\n0.60\n0.53\n0\n0\n\n\nEller College of Management\n0.63\n0.69\n0.66\n0.68\n0.15\n0\n0\n\n\n\n\n\n\n\nLoad Libraries\n# Mean Number of students enrolled in in-person vs online vs … (BC to BH) for different colleges - Utkarsha\n\nlibrary(dplyr)\n\n# Create a table for each course type\ncourse_types &lt;- c(\"In_Person\", \"Full_Online\", \"IntractTV\", \"Hybrid\", \"Live_Online\")\n\ntables_list &lt;- lapply(course_types, function(course) {\n  table_data &lt;- study_data %&gt;%\n    group_by(College) %&gt;%\n    summarise(Mean_Enrollment = round(mean(get(course), na.rm = TRUE), 2))\n  \n  names(table_data)[2] &lt;- paste(\"Mean_Enrollment_\", course)\n  table_data\n})\n\n# Merge tables into a single table by College name\nmerged_table &lt;- Reduce(function(x, y) merge(x, y, by = \"College\", all = TRUE), tables_list)\n\n# Display the merged table\nkable(merged_table)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCollege\nMean_Enrollment_ In_Person\nMean_Enrollment_ Full_Online\nMean_Enrollment_ IntractTV\nMean_Enrollment_ Hybrid\nMean_Enrollment_ Live_Online\n\n\n\n\nCollege of Agric and Life Sci\n0.58\n0.64\n0\n0.24\n0.28\n\n\nCollege of Humanities\n0.84\n0.76\n0\n0.08\n0.47\n\n\nCollege of Science\n1.65\n0.34\n0\n0.60\n0.59\n\n\nCollege of Social & Behav Sci\n0.86\n0.84\n0\n0.13\n0.55\n\n\nEller College of Management\n0.83\n0.25\n0\n0.25\n0.47\n\n\n\n\n\n\n\nLoad Libraries\n# Mean Number of students enrolled in in-person vs online vs … (BC to BH) for different colleges - Utkarsha\n\nlibrary(dplyr)\n\n# Create a table for each course type\ncourse_types &lt;- c(\"Reg_Session\", \"First_Half_Session\", \"Second_Half_Session\", \"First_Third_Session\", \"Second_Third_Session\", \"Third_Third_Session\", \"Ten_Week\", \"Thirteen_Week\", \"Other\")\n\ntables_list &lt;- lapply(course_types, function(course) {\n  table_data &lt;- study_data %&gt;%\n    group_by(College) %&gt;%\n    summarise(Mean_Enrollment = round(mean(get(course), na.rm = TRUE), 2))\n  \n  names(table_data)[2] &lt;- paste(\"Mean_Enrollment_\", course)\n  table_data\n})\n\n# Merge tables into a single table by College name\nmerged_table &lt;- Reduce(function(x, y) merge(x, y, by = \"College\", all = TRUE), tables_list)\n\n# Display the merged table\nkable(merged_table)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCollege\nMean_Enrollment_ Reg_Session\nMean_Enrollment_ First_Half_Session\nMean_Enrollment_ Second_Half_Session\nMean_Enrollment_ First_Third_Session\nMean_Enrollment_ Second_Third_Session\nMean_Enrollment_ Third_Third_Session\nMean_Enrollment_ Ten_Week\nMean_Enrollment_ Thirteen_Week\nMean_Enrollment_ Other\n\n\n\n\nCollege of Agric and Life Sci\n1.39\n0.17\n0.16\n0.00\n0.01\n0.00\n0\n0\n0.00\n\n\nCollege of Humanities\n1.67\n0.19\n0.28\n0.00\n0.00\n0.00\n0\n0\n0.01\n\n\nCollege of Science\n2.81\n0.09\n0.12\n0.00\n0.00\n0.00\n0\n0\n0.17\n\n\nCollege of Social & Behav Sci\n1.76\n0.22\n0.33\n0.01\n0.01\n0.01\n0\n0\n0.04\n\n\nEller College of Management\n1.58\n0.11\n0.11\n0.00\n0.00\n0.00\n0\n0\n0.00"
  }
]
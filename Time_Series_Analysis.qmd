---
title: "Time Series Analysis"
author: "The Null wranglers"
editor: visual
---

```{r}
#| label: load-pkgs
#| message: false

suppressWarnings(library(tidyverse))
library(knitr)
library(lubridate)
library(ggplot2)
library(dplyr)
```

## Dataset Setup

```{r}
#| code-fold: true
#| code-summary: "Load data"
# read in data
study_data <- read.csv("data/study_data.csv")
kable(head(study_data))
```

```{r}

dew_data <- read.csv("data/DEW Rates.csv")

# Filter the data for the specified colleges and TERM_LD values
selected_colleges <- c('College of Agric and Life Sci', 'College of Humanities','College of Science', 'College of Social & Behav Sci', 'Eller College of Management')


selected_terms <- c('Fall 2018', 'Spring 2019', 'Fall 2019', 'Spring 2020', 'Fall 2020', 'Spring 2021')

filtered_data <- dew_data %>%
  filter(College %in% selected_colleges & TERM_LD %in% selected_terms)

```


```{r, warning=FALSE}
#DEW count (K) for 5 colleges over semesters - Utkarsha

# Aggregate the data

aggregated_data <- filtered_data %>%

  group_by(College, TERM_LD) %>%

  summarise(DEW_COUNT = sum(DEW_COUNT))

 

# Convert TERM_LD to a factor with a specific order

filtered_data$TERM_LD <- factor(filtered_data$TERM_LD, levels = selected_terms)

 

# Save the plot to a folder named "images"
plot <- ggplot(aggregated_data, aes(x = factor(TERM_LD, levels = selected_terms), y = DEW_COUNT, color = College, group = College)) +
  geom_line() +
  geom_point() +
  labs(
    title = "Total DEW Count Over Time",
    x = "Term",
    y = "Total DEW Count"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Save the plot as a PNG file
ggsave("images/TSA1.png", plot = plot)


```


```{r}
#DEW counts (H, I, J) for 5 colleges (Facet) over semesters  - Dong

# Aggregate the data by College, TERM_LD, and calculate the sum of D_GRADE_COUNT, FAIL_GRADE_COUNT, and WITHDRAW_GRADE_COUNT
aggregated_data <- filtered_data %>%
  group_by(College, TERM_LD) %>%
  summarise(D_GRADE_COUNT = sum(D_GRADE_COUNT),
            FAIL_GRADE_COUNT = sum(FAIL_GRADE_COUNT),
            WITHDRAW_GRADE_COUNT = sum(WITHDRAW_GRADE_COUNT))

# Convert TERM_LD to a factor with a specific order
aggregated_data$TERM_LD <- factor(aggregated_data$TERM_LD, levels = selected_terms)

# Create a facet plot with lines for time series analysis
ggplot(aggregated_data, aes(x = TERM_LD, group = College)) +
  geom_line(aes(y = D_GRADE_COUNT, color = "D_GRADE_COUNT"), size = 1) +
  geom_line(aes(y = FAIL_GRADE_COUNT, color = "FAIL_GRADE_COUNT"), size = 1) +
  geom_line(aes(y = WITHDRAW_GRADE_COUNT, color = "WITHDRAW_GRADE_COUNT"), size = 1) +
  geom_point(aes(y = D_GRADE_COUNT, color = "D_GRADE_COUNT"), size = 2) +
  geom_point(aes(y = FAIL_GRADE_COUNT, color = "FAIL_GRADE_COUNT"), size = 2) +
  geom_point(aes(y = WITHDRAW_GRADE_COUNT, color = "WITHDRAW_GRADE_COUNT"), size = 2) +
  labs(title = "Total DEW Count Over Time",
       x = "Term",
       y = "Total Count",
       color = "Category") +
  scale_color_manual(values = c("D_GRADE_COUNT" = "blue", "FAIL_GRADE_COUNT" = "red", "WITHDRAW_GRADE_COUNT" = "green")) +
  facet_wrap(~College, scales = "free_y") +
  theme_minimal()+
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

```{r}
#DEW counts (F) based on the division level over semesters - Anjani

# Rename the 'course.level' column to 'Course_Level'
filtered_data <- filtered_data %>%
  rename(Course_Level = 	Course.Level)

grouped_data <- filtered_data %>%
  group_by(College, TERM_LD, Course_Level)

# Convert TERM_LD to factor with ordered levels
grouped_data$TERM_LD <- factor(
  grouped_data$TERM_LD,
  levels = selected_terms,
  ordered = TRUE
)


# Summarize the grouped data to get the desired summary statistics
summary <- grouped_data %>%
  summarise(
    count = n()
  )

# Plotting the facet line graph
plot2 <- ggplot(summary, aes(x = TERM_LD, y = count, group = Course_Level, color = Course_Level)) +
  geom_line() +
  geom_point() +
  facet_wrap(~College, scales = "free") +
  labs(
    title = "Count of Course Levels over Terms",
    x = "Term",
    y = "Count"
  ) +
  theme_minimal()+
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Save the plot as a PNG file
ggsave("images/TSA2.png", plot = plot2)

```
```{r}
study_data <- read.csv("data/study_data.csv")

# Filter the data for the specified colleges and TERM_LD values
study_data_selected_terms <- c('Fall 2018', 'Spring 2019', 'Fall 2019', 'Spring 2020', 'Fall 2020', 'Spring 2021')

study_data_filtered_data <- study_data %>%
  filter(College %in% selected_colleges & TERM_LD %in% study_data_selected_terms)

```

```{r}
#How time affects classes (columns AH to AM) for different colleges (the five mentioned above)

# Create the table for each time slot
time_slots <- c("Early_Morning", "Mid_Morning", "Early_Afternoon", "Mid_Afternoon", "Evening", "Asynchronous")

tables_list <- lapply(time_slots, function(slot) {
  table_data <- study_data_filtered_data%>%
    group_by(College, TERM_LD) %>%
    summarise(Total_Classes_Attended = sum(!!sym(slot), na.rm = TRUE))
})

# Modify column names of the tables within tables_list
for (i in 1:length(tables_list)) {
  col_name <- paste("Total_", time_slots[i], sep = "")  # Generate new column name
  names(tables_list[[i]])[3] <- col_name  # Assign new column name to the last column
}

# Merge tables into a single table
merged_table <- reduce(tables_list, full_join, by = c("College", "TERM_LD"))

# Melt the data for plotting
merged_table_long <- tidyr::pivot_longer(merged_table, cols = starts_with("Total"), 
                                         names_to = "Time_Slot", values_to = "Total_Classes_Attended")

# Convert TERM_LD to factor with ordered levels
merged_table_long$TERM_LD <- factor(
  merged_table_long$TERM_LD,
  levels = study_data_selected_terms,
  ordered = TRUE
)

# Plotting the facet plot with chronological x-axis
ggplot(merged_table_long, aes(x = TERM_LD, y = Total_Classes_Attended, color = Time_Slot, group = Time_Slot)) +
  geom_line() +
  facet_wrap(~ College, scales = "free") +
  labs(
    title = "Total Classes Attended in Different Time Slots for Colleges",
    x = "Term ID",
    y = "Total Classes Attended"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

```{r}
#Total number of classes per week (AN to AT) - Anjani

# Create a table for each day of the week
weekdays <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")

tables_list <- lapply(weekdays, function(slot) {
  table_data <- study_data_filtered_data%>%
    group_by(College, TERM_LD) %>%
    summarise(Total_Classes_Attended = sum(!!sym(slot), na.rm = TRUE))
})

# Modify column names of the tables within tables_list
for (i in 1:length(tables_list)) {
  col_name <- paste("Total_", weekdays[i], sep = "")  # Generate new column name
  names(tables_list[[i]])[3] <- col_name  # Assign new column name to the last column
}

# Merge tables into a single table
merged_table <- reduce(tables_list, full_join, by = c("College", "TERM_LD"))

# Melt the data for plotting
merged_table_long <- tidyr::pivot_longer(merged_table, cols = starts_with("Total"),  names_to = "Time_Slot", values_to = "Total_Classes_Attended")

# Convert TERM_LD to factor with ordered levels
merged_table_long$TERM_LD <- factor(
  merged_table_long$TERM_LD,
  levels = study_data_selected_terms,
  ordered = TRUE
)

# Convert Time_Slot to factor with ordered levels
merged_table_long$Time_Slot <- factor(
  merged_table_long$Time_Slot,
  levels = paste("Total_", weekdays, sep = ""),
  ordered = TRUE
)

# Plotting the facet plot
ggplot(merged_table_long, aes(x = TERM_LD, y = Total_Classes_Attended, color = Time_Slot, group = Time_Slot)) +
  geom_line() +
  facet_wrap(~ College, scales = "free") +
  labs(
    title = "Total Classes Attended in Different Days for Colleges",
    x = "Term ID",
    y = "Total Classes Attended"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

```{r}
#Total Number of students enrolled in different types of teaching format (columns AU to BB) for different colleges - Dong

#  Only look at five colleges: Agriculture, Social and Behavioral, Eller, Humanities, Science
study_data<- study_data%>%
  filter(College == "College of Agric and Life Sci" | College ==  "Eller College of Management"|  College == "College of Social & Behav Sci"| College == "College of Science"|  College ==  "College of Humanities")

```

```{r, fig.width=14}
# total number of courses by colleges
study_data%>%
  group_by(College) %>%
  ggplot(aes( x = College,
          	fill = College))+
  geom_bar(position = "dodge")
```

```{r, fig.width=14, fig.height = 14}
#3 Mean student enrollment in different types of teaching format (columns AU to BB) by colleges - Dong

# Reshape data and calculate mean enrollment
long_data <- study_data%>%
  pivot_longer(
	cols = Laboratory:Practicum,
	names_to = "TeachingFormat",
	values_to = "Enrollment"
  ) %>%
  group_by(College, TeachingFormat) %>%
  summarise(MeanEnrollment = mean(Enrollment, na.rm = TRUE))

# Create a plot with facets for each college, adding colors for each TeachingFormat
plot3 <- ggplot(long_data, aes(x = TeachingFormat, y = MeanEnrollment, fill = TeachingFormat)) +
  geom_bar(stat = "identity") +
  facet_wrap(~ College) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  scale_fill_brewer(palette = "Set1")  

# Save the plot as a PNG file
ggsave("images/TSA3.png", plot = plot3)
```




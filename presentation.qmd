---
title: "Descriptive Analysis of Grade Outcomes"
subtitle: "INFO 523 - Fall 2023 - Project Final"
author: "Kristi Manasil, Dong Chen, Utkarsha Patil, Anjani Sowmya Bollapragada, Rohit Hemaraja"
title-slide-attributes:
  data-background-image: images/watercolour_sys02_img34_teacup-ocean.jpg
  data-background-size: stretch
  data-background-opacity: "0.7"
  data-slide-number: none
format:
  revealjs:
    theme:  ['data/customtheming.scss']
editor: visual
execute:
  echo: false
---
# Introduction

```{r}
#| label: load-packages
#| include: false
# Load packages here
pacman::p_load(tidymodels,
               tidyverse)
```

```{r}
#| label: setup
#| include: false
# Plot theme
ggplot2::theme_set(ggplot2::theme_minimal(base_size = 11))
# For better figure resolution
knitr::opts_chunk$set(
  fig.retina = 3,
  dpi = 300,
  fig.width = 6,
  fig.asp = 0.618
  )
```

```{r}
#| label: load-pkgs
#| message: false
suppressWarnings(library(tidyverse))
library(lubridate)
library(ggplot2)
library(dplyr)
library(tidyr)
library(knitr)
library(kableExtra)
library(stringr)
```

```{r}
#| code-fold: true
#| code-summary: "Load data"
# read in data
study_data <- read.csv("data/study_data.csv")
# read in data
dew_data <- read.csv("data/clean_dew_data.csv")
```



-   Goal: To analyze and understand the student grade outcomes at the University of Arizona (UArizona) before, during, and after the COVID-19 pandemic.

Research Questions:

  (1) Pattern Analysis -- What if any patterns or relationships exist between colleges, departments, or course level and grade outcomes for enrolled students?
  
  (2) Predictive Modeling -- Can a predictive model be developed that accurately forecasts grade outcomes based on course attributes?

# Datasets

(1) DEW Rates -- Breakdown of grade value outcomes during the academic years of 2018-19, 2019-20, and 2020-21 at UArizona It consists of 35697 observations of courses with 23 variables related to enrollment and grade values .

(2) Course Attributes -- Course attributes for the academic years of 2019-20, and 2020-21 at UArizona. There are over 260,000 observations of courses with 27 variables per observation.

# EDA

*For both data sets, we started with checking all columns and data shape. We decided which columns we will be using.* *We also checked and handled missing values.*

## Check columns of the "DEW Rates" data set

```{r}
# Check columns - DEW Rates(Breakdown of grade value outcomes during the academic years of 2018-19, 2019-20, and 2020-21 at UArizona)
kable(head(dew_data))%>%
  kable_styling(font_size = 18, full_width = F)
```

## Check columns of the "Course Attributes" data set

```{r}
# Check columns - SY20 and SY21 (Course attributes for the academic years of 2019-20, and 2020-21 at UArizona)
kable(head(study_data))%>%
  kable_styling(font_size = 18, full_width = F)
```

## Total course offering for each college per semester

```{r}
#| code-fold: true
#| code-summary: "summary of total courses"
table1<- dew_data %>% group_by(College) %>% count(TERM_LD)
table1 <- table1 %>% pivot_wider(names_from = TERM_LD, values_from = n)
kable(table1, caption = "")%>%
  kable_styling(font_size = 12, full_width = F)
```

```{r}
#| code-fold: true
#| code-summary: "remove low course offering colleges"
dew_data <- dew_data %>% filter(College != "College of Medicine - Tucson",
                                College != "College of Nursing",
                                College != "College of Public Health",
                                College != "Colleges of Letters Arts & Sci",
                                College != "Graduate College",
                                College != "James E Rogers College of Law",
                                College != "R Ken Coit College of Pharmacy",
                                College != "W.A. Franke Honors College",
                                College != "College of Applied Sci & Tech",
                                College != "College of Education",
                                College != "College of Engineering",
                                College != "College of Fine Arts")
```

*Then, we limited focus to the top 5 colleges by course enrollment.*

## 

*Then, we looked at the total student enrollment for each college per semester.*

```{r }
#| code-fold: true
#| code-summary: "summary of total enrollment"
# total enrollment table
enrollment <- aggregate(Total.Student.Count~College + TERM_LD, data=dew_data, sum)
enrollment <- enrollment %>% pivot_wider(names_from = TERM_LD, values_from = Total.Student.Count)
kable(enrollment, caption =  "Total Student Enrollment for Each College per Semester")%>%
  kable_styling(font_size = 18, full_width = F)
```

*We also looked at the total D, E, and W grade counts for each college per semester.*

```{r}
#| code-fold: true
#| code-summary: "summary of total enrollment"
dew_total <- aggregate(DEW_COUNT~College + TERM_LD, data=dew_data, sum)
dew_total <- dew_total %>% pivot_wider(names_from = TERM_LD, values_from = DEW_COUNT)
kable(dew_total, caption =  "Total D, F, W Grade Counts for Each College per Semester")%>%
  kable_styling(font_size = 18, full_width = F)
# Despite enrollment staying steady, we see a noticeable decrease in DEW outcomes for the spring of 2020. Followed by an increase for the fall of 2020.
```

## 

*We then calculated average number of students per course by college each semester.*

```{r}
#| code-fold: true
#| code-summary: "average number of students per course"
student_per_course <- aggregate(Total.Student.Count ~College + TERM_LD, data=dew_data, mean)
# round to nearest whole digit
student_per_course$Total.Student.Count <- round(student_per_course$Total.Student.Count)
# pivot wider
student_per_course <- student_per_course %>% pivot_wider(names_from = TERM_LD, values_from = Total.Student.Count)
# display table
kable(student_per_course, caption =  "Average Number of Student Enrollment per Course by College Each Semester")%>%
  kable_styling(font_size = 18, full_width = F)
```

*We also calculated average number of D, E, W per course by college each semester.*

```{r}
#| code-fold: true
#| code-summary: "average number of students per course"
dew_per_course <- aggregate(Percent.DEW ~College + TERM_LD, data=dew_data, mean)
# round to 2 digits
dew_per_course$Percent.DEW <- round(dew_per_course$Percent.DEW, 2)
# pivot wider
dew_per_course <- dew_per_course %>% pivot_wider(names_from = TERM_LD, values_from = Percent.DEW)
# display table
kable(dew_per_course, caption =  "Average Number of D, F, and W Grade (percentage) per Course by College Each Semester")%>%
  kable_styling(font_size = 18, full_width = F)
```

## 

*We calculated the mean averages for the pass, D, E, W, and DEW rates across the five selected colleges.*

```{r}
library(dplyr)
library(knitr)
library(stringr)
# Group by College and calculate the mean for each grade-related column
college_means_data <- dew_data %>%
  group_by(College) %>%
  summarise(PASS_GRADE_COUNT = mean(PASS_GRADE_COUNT),
            D_GRADE_COUNT = mean(D_GRADE_COUNT),
            FAIL_GRADE_COUNT = mean(FAIL_GRADE_COUNT),
            WITHDRAW_GRADE_COUNT = mean(WITHDRAW_GRADE_COUNT),
            DEW_COUNT = mean(DEW_COUNT))
# Remove underscores from column names
names(college_means_data) <- str_replace_all(names(college_means_data), "_", " ")
# Round off mean values to two decimal points
college_means_data[, -1] <- round(college_means_data[, -1], 2)
# Create a kable table for means of each grade-related column for each college
kable(college_means_data,
               caption = "Means for Total Pass, D, E, W, and Total DEW Counts Across Colleges")%>%
  kable_styling(font_size = 18, full_width = F)
```

## EDA of Course Attributes Data Set

*Below is one example of our EDA steps, focusing on how class times throughout the day impact courses across different colleges.*

```{r}
library(dplyr)
# Create a table for each time slot
time_slots <- c("Early_Morning", "Mid_Morning", "Early_Afternoon", "Mid_Afternoon", "Evening", "Asynchronous")
tables_list <- lapply(time_slots, function(slot) {
  table_data <- study_data %>%
    group_by(College) %>%
    summarise(Mean_Classes_Attended = round(mean(get(slot), na.rm = TRUE), 2))
  names(table_data)[2] <- paste("Mean_", slot)
  table_data
})
# Merge tables into a single table by College name
merged_table <- Reduce(function(x, y) merge(x, y, by = "College", all = TRUE), tables_list)
# Display the merged table
kable(merged_table)%>%
  kable_styling(font_size = 18, full_width = F)
```

# Anomaly Detection

In order to identify patterns or trends in the Grade Outcomes, we wanted to better understand the current anomalies in the data. We focused on identifying outliers with a high value of poor grade outcomes.

```{r}
#| code-fold: true
#| code-summary: "Quartiles for DEW Percents"
# read in data
anomaly_data <- read.csv("data/study_data.csv")
summary(anomaly_data$Percent.DEW)
```

Here we verify that mean value is the 12.55% as we found in the initial EDA..

## Histogram of DEW Percentages

![](images/g1.png){width="800"}

## Box Plot of DEW Percents

![](images/ad1.png){width="640"}

## Table of High DEW Percent Courses

![](images/antable1.png)

## Table of High DEW Courses Social and Behavioral Sciences

![](images/antable2.png)

## Time Series Analysis

*Time series analysis is a statistical method used to analyze and interpret sequential data points collected and ordered over time. It involves examining patterns, trends, and behaviors within the dataset to understand how the data evolves and changes across different time intervals.*

## Plot 1

![Total DEW Count for different colleges changed over different Terms](images/img1_TSA.png){width="100%"}

## Plot 2

![Total D, E (fail) and W (withdraw) count for different colleges changed over different Terms](images/ing2_TSA.png){width="100%"}

## Plot 3

![Total Classes Attended in Different Time Slots for Colleges changed over different Terms](images/img4_TSA.png){width="100%"}

# Decision Tree

The decision tree used for predicting whether a class has a high DEW score or a low DEW score.

## Code

``` r
filtered_data1 <- data %>% filter(Sections <= 1)
filtered_data1$DEW_COUNT[filtered_data1$Percent.DEW <= 12.2] <- 'Low'
filtered_data1$DEW_COUNT[filtered_data1$Percent.DEW > 12.2] <- 'High'
filtered_data1$DEW_COUNT <- as.factor(filtered_data1$DEW_COUNT)
tree_data <- select(filtered_data1, DEW_COUNT, Full_Online, Hybrid, Live_Online, Reg_Session, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday, Early_Morning, Mid_Morning, Early_Afternoon, Mid_Afternoon, Evening, Asynchronous )
col_names <- c("Full_Online", "Hybrid", "Live_Online", "Reg_Session", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday", "Early_Morning", "Mid_Morning", "Early_Afternoon", "Mid_Afternoon", "Evening", "Asynchronous" )
tree_data[col_names] <- sapply(tree_data[col_names], as.logical)
tree_default <- tree_data |>
rpart( DEW_COUNT~., data = _)
rpart.plot(tree_default)
```

## Plot

![The decision tree predicts "High" if Full_Online is \>= 0.5; otherwise, it predicts "Low." Tree building stops when additional splits don't significantly improve performance or when there are insufficient observations for further splitting.](images/decision_tree.png){fig-align="center" width="500"}

# Regression

Feature Selection using College of Social and Behavioral Sciences

## Correlate - Mode of Class

Correlation of Percent DEW, In- Person, Full Online, Hybrid, Live-online

![](images/mode_regression_data_table.png){width="650"}

## Correlate - Sessions

![](images/session_regression_data_table.png){width="653"}

## Selected Features

-   \- Percent.DEW

-   \- Full_Online

-   \- Second_Half_Session


## Multilinear Regression

``` r
{r}
# Perform multiple linear regression
model <- lm(Percent.DEW ~ Second_Half_Session + Full_Online, data = model_data)
# Create a linear regression model specification
lin_reg_spec <- linear_reg() |>
  set_engine("lm")
# Fit the model to the training data
lin_reg_fit <- lin_reg_spec |>
  fit(y ~ X, data = train_data)
# Apply model to the test set
y_pred_test <- predict(lin_reg_fit, new_data = test_data) |>
  pull(.pred)
```

## Predicted Function

![](images/Predicted_Function.png){width="649"}

## Lasso Regression

![](images/lasso_model_plot.png){width="642"}

## Lasso - Training and Testing Error

![](images/lasso_model_errors_plot.png){width="639"}

## Ridge Regression

![](images/ridge_model_plot.png){width="640"}

## Ridge - Training and Testing Error

![](images/ridge_model_errors_plot.png){width="638"}

# Thank You
